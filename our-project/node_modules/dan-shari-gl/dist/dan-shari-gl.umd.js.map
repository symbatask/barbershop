{"version":3,"file":"dan-shari-gl.umd.js","sources":["../src/utils/common/constants.ts","../node_modules/gl-matrix/esm/common.js","../node_modules/gl-matrix/esm/mat3.js","../node_modules/gl-matrix/esm/mat4.js","../node_modules/gl-matrix/esm/vec3.js","../src/utils/functions/gl-functions.ts","../src/utils/functions/gl-textures.ts","../src/utils/functions/assets-functions.ts","../src/utils/generate/generateGeometry.ts","../src/utils/generate/generateSimpleGeometry.ts","../src/utils/common/shaders.ts","../src/math/math.ts","../src/math/ray.ts","../src/camera/camera.ts","../src/extra/cameracontroller.ts","../src/extra/textLayout.ts","../src/extra/textRendering.ts","../src/extra/TexturePool.ts","../src/extra/swapRenderer.ts","../src/extra/fbo.ts"],"sourcesContent":["export const FLOAT: number = 0x1406;\n\nexport const RGB: number = 0x1907;\n\n// variables relating to textures\nexport const NEAREST: number = 0x2600;\nexport const LINEAR: number = 0x2601;\nexport const NEAREST_MIPMAP_NEAREST: number = 0x2700;\nexport const LINEAR_MIPMAP_NEAREST: number = 0x2701;\nexport const NEAREST_MIPMAP_LINEAR: number = 0x2702;\nexport const LINEAR_MIPMAP_LINEAR: number = 0x2703;\nexport const CLAMP_TO_EDGE: number = 0x812f;\nexport const REPEAT: number = 0x2901;\n\n// Framebuffers and renderbuffers\n// https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants#Framebuffers_and_renderbuffers\n\nexport const DEPTH_COMPONENT16: number = 0x81a5;\n\n// Data types\n// https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants#Data_types\n\nexport const UNSIGNED_BYTE: number = 0x1401;\n\nexport const EMPTY_CANVAS_SIZE = 16;\nexport const EMPTY_CANVAS_COLOR = '#ff0000';\nexport const COLOR_REPEAT = 4;\n\nexport const UNIFORM_1F = '1f';\nexport const UNIFORM_1I = '1i';\nexport const UNIFORM_2F = '2f';\nexport const UNIFORM_3F = '3f';\nexport const UNIFORM_MAT_4F = 'mat4';\n","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}","import * as glMatrix from \"./common.js\";\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\n\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {mat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {mat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {mat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to translate\r\n * @param {vec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n;\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\r\n* Calculates a 3x3 matrix from the given quaternion\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {quat} q Quaternion to create matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\r\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {mat4} a Mat4 to derive the normal matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {mat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {mat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2));\n}\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.sqrt(x * x + y * y + z * z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.sqrt(x * x + y * y + z * z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {quat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n  var trace = mat[0] + mat[5] + mat[10];\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (mat[6] - mat[9]) / S;\n    out[1] = (mat[8] - mat[2]) / S;\n    out[2] = (mat[1] - mat[4]) / S;\n  } else if (mat[0] > mat[5] && mat[0] > mat[10]) {\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\n    out[3] = (mat[6] - mat[9]) / S;\n    out[0] = 0.25 * S;\n    out[1] = (mat[1] + mat[4]) / S;\n    out[2] = (mat[8] + mat[2]) / S;\n  } else if (mat[5] > mat[10]) {\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\n    out[3] = (mat[8] - mat[2]) / S;\n    out[0] = (mat[1] + mat[4]) / S;\n    out[1] = 0.25 * S;\n    out[2] = (mat[6] + mat[9]) / S;\n  } else {\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\n    out[3] = (mat[1] - mat[4]) / S;\n    out[0] = (mat[8] + mat[2]) / S;\n    out[1] = (mat[6] + mat[9]) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n;\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2));\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {vec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nexport function rotateX(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\n  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nexport function rotateY(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nexport function rotateZ(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\n  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {vec3} a The first operand\r\n * @param {vec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var tempA = fromValues(a[0], a[1], a[2]);\n  var tempB = fromValues(b[0], b[1], b[2]);\n  normalize(tempA, tempA);\n  normalize(tempB, tempB);\n  var cosine = dot(tempA, tempB);\n\n  if (cosine > 1.0) {\n    return 0;\n  } else if (cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import { FLOAT } from '../common/constants';\nimport { vec2, vec3, mat4 } from 'gl-matrix';\nimport { Camera } from '../../camera/camera';\n\ninterface IUniformObject {\n\t[key: string]: WebGLUniformLocation;\n}\n\nexport function getUniformLocations(\n\tgl: WebGLRenderingContext,\n\tprogram: WebGLProgram,\n\tarr: string[]\n): IUniformObject {\n\tconst locations: IUniformObject = {};\n\n\t// for (let ii = 0; ii < arr.length; ii++) {\n\tfor (const name of arr) {\n\t\tconst uniformLocation: WebGLUniformLocation = gl.getUniformLocation(\n\t\t\tprogram,\n\t\t\tname\n\t\t) as WebGLUniformLocation;\n\t\tlocations[name] = uniformLocation;\n\t}\n\n\treturn locations;\n}\n\n/**\n * display error of shader.\n * @param text\n */\nexport function addLineNumbers(text: string) {\n\tconst lines = text.split('\\n');\n\n\tfor (let ii = 0; ii < lines.length; ii = ii + 1) {\n\t\tlines[ii] = `${ii + 1}: ${lines[ii]}`;\n\t}\n\n\treturn lines.join('\\n');\n}\n\n/**\n * compile webgl shader\n * @param gl\n * @param glType\n * @param shaderSource\n */\nexport function compileGLShader(gl: WebGLRenderingContext, glType: number, shaderSource: string) {\n\tconst shader = gl.createShader(glType) as WebGLShader;\n\n\tgl.shaderSource(shader, shaderSource);\n\tgl.compileShader(shader);\n\n\tif (gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n\t\treturn shader;\n\t} else {\n\t\tconsole.warn(\"[WebGLShader]: Shader couldn't compile.1\");\n\n\t\tif (gl.getShaderInfoLog(shader) !== '') {\n\t\t\tconsole.warn(\n\t\t\t\t'[WebGLShader]: gl.getShaderInfoLog()',\n\t\t\t\tglType === gl.VERTEX_SHADER ? 'vertex' : 'fragment',\n\t\t\t\tgl.getShaderInfoLog(shader),\n\t\t\t\taddLineNumbers(shaderSource)\n\t\t\t);\n\n\t\t\treturn undefined;\n\t\t}\n\t}\n}\n\n/**\n *\n * @param gl\n * @param vertexShaderSrc\n * @param fragmentShaderSrc\n */\nexport function createProgram(\n\tgl: WebGLRenderingContext,\n\tvertexShaderSrc: string,\n\tfragmentShaderSrc: string\n): WebGLProgram {\n\tconst program = gl.createProgram() as WebGLProgram;\n\n\tconst vertexShader = compileGLShader(gl, gl.VERTEX_SHADER, vertexShaderSrc) as WebGLShader;\n\tconst fragmentShader = compileGLShader(\n\t\tgl,\n\t\tgl.FRAGMENT_SHADER,\n\t\tfragmentShaderSrc\n\t) as WebGLShader;\n\n\tgl.attachShader(program, vertexShader);\n\tgl.attachShader(program, fragmentShader);\n\tgl.linkProgram(program);\n\n\ttry {\n\t\tconst success = gl.getProgramParameter(program, gl.LINK_STATUS);\n\t\tif (!success) {\n\t\t\tthrow gl.getProgramInfoLog(program);\n\t\t}\n\t} catch (error) {\n\t\tconsole.warn(`WebGLProgram: ${error}`);\n\t}\n\n\treturn program;\n}\n\n/**\n *\n * create buffer and get location from program\n *\n * @param gl\n * @param program\n * @param data\n * @param str\n *\n * @returns uniformLocation\n */\nexport function createBufferWithLocation(\n\tgl: WebGLRenderingContext,\n\tprogram: WebGLProgram,\n\tdata: Float32Array,\n\tstr: string\n) {\n\tconst buffer = gl.createBuffer();\n\tconst location = gl.getAttribLocation(program, str);\n\n\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\tgl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n\n\treturn { buffer, location };\n}\n\n/**\n * creates and initializes WebGLBuffer with data\n *\n * @param gl\n * @param data\n */\nexport function createBuffer(gl: WebGLRenderingContext, data: Float32Array) {\n\tconst buffer = gl.createBuffer();\n\n\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\tgl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n\n\treturn buffer;\n}\n\n/**\n * update array buffer\n *\n * @param gl\n * @param buffer\n * @param data\n * @param isBind\n */\nexport function updateArrayBuffer(\n\tgl: WebGLRenderingContext,\n\tbuffer: WebGLBuffer,\n\tdata: Float32Array,\n\tisBind: boolean = true\n) {\n\tif (isBind) {\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\t}\n\tgl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n}\n\n/**\n *\n * make  index buffer\n *\n * @param gl\n * @param indices\n */\nexport function createIndex(gl: WebGLRenderingContext, indices: Uint16Array | Uint32Array) {\n\tconst buffer = gl.createBuffer();\n\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW);\n\n\tconst cnt = indices.length;\n\n\treturn { cnt, buffer };\n}\n\n/**\n *\n * @param {WebGLRenderingContext} gl\n * @param {WebGLBuffer} buffer\n * @param {Number} location\n * @param {Number} size\n * @param {Boolean} normalized\n * @param {Number} stride\n * @param {Number} offset\n */\nexport function bindBuffer(\n\tgl: WebGLRenderingContext,\n\tbuffer: WebGLBuffer,\n\tlocation: number = 0,\n\tsize: number = 1,\n\ttype: number = FLOAT,\n\tnormalized: boolean = false,\n\tstride: number = 0,\n\toffset: number = 0,\n\tisBind: boolean = true\n) {\n\tif (isBind) {\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\t}\n\tgl.vertexAttribPointer(location, size, type, normalized, stride, offset);\n\tgl.enableVertexAttribArray(location);\n}\n\nexport function generateFaceFromIndex(vertices: number[], indices: number[]) {\n\tconst faces: [vec3, vec3, vec3][] = [];\n\n\tfor (let ii = 0; ii < indices.length; ii = ii + 3) {\n\t\tlet index0 = indices[ii];\n\t\tlet index1 = indices[ii + 1];\n\t\tlet index2 = indices[ii + 2];\n\n\t\tfaces.push([\n\t\t\tvec3.fromValues(\n\t\t\t\tvertices[3 * index0],\n\t\t\t\tvertices[3 * index0 + 1],\n\t\t\t\tvertices[3 * index0 + 2]\n\t\t\t),\n\t\t\tvec3.fromValues(\n\t\t\t\tvertices[3 * index1],\n\t\t\t\tvertices[3 * index1 + 1],\n\t\t\t\tvertices[3 * index1 + 2]\n\t\t\t),\n\t\t\tvec3.fromValues(\n\t\t\t\tvertices[3 * index2],\n\t\t\t\tvertices[3 * index2 + 1],\n\t\t\t\tvertices[3 * index2 + 2]\n\t\t\t)\n\t\t]);\n\t}\n\n\treturn faces;\n}\n\nexport function castMouse(\n\tmouse: vec2,\n\tviewMatrixInverse: mat4,\n\tprojectionMatrixInverse: mat4,\n\tdepth: number = 0\n) {\n\tconst clipSpace = vec3.fromValues(mouse[0], mouse[1], depth);\n\tconst cameraSpace = vec3.create();\n\tconst worldSpace = vec3.create();\n\n\tvec3.transformMat4(cameraSpace, clipSpace, projectionMatrixInverse);\n\tvec3.transformMat4(worldSpace, cameraSpace, viewMatrixInverse);\n\n\treturn worldSpace;\n}\n\nexport function createFrameBufferWithTexture(gl: WebGLRenderingContext, texture: WebGLTexture) {\n\tconst framebuffer = gl.createFramebuffer();\n\tgl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n\treturn framebuffer;\n}\n\nexport function createAndBindDepthBuffer(gl: WebGLRenderingContext, width: number, height: number) {\n\tconst depth = gl.createRenderbuffer();\n\tgl.bindRenderbuffer(gl.RENDERBUFFER, depth);\n\tgl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, width, height);\n\n\treturn depth;\n}\n\nexport function addKeyword(sources: string, keywords: string | null) {\n\tif (keywords === null) {\n\t\treturn sources;\n\t}\n\n\treturn keywords + sources;\n}\n","import { RGB, UNSIGNED_BYTE, CLAMP_TO_EDGE, LINEAR } from '../common/constants';\n\n/**\n *\n * @param gl\n * @param textureWidth\n * @param textureHeight\n * @param format\n * @param minFilter\n * @param magFilter\n * @param wrapS\n * @param wrapT\n * @param type\n */\nexport function createEmptyTexture(\n\tgl: WebGLRenderingContext,\n\ttextureWidth: number,\n\ttextureHeight: number,\n\tformat: number = RGB,\n\tminFilter: number = LINEAR,\n\tmagFilter: number = LINEAR,\n\twrapS: number = CLAMP_TO_EDGE,\n\twrapT: number = CLAMP_TO_EDGE,\n\ttype: number = UNSIGNED_BYTE\n) {\n\tconst texture = gl.createTexture() as WebGLTexture;\n\tupdateEmptyImageTexture(\n\t\tgl,\n\t\ttexture,\n\t\ttextureWidth,\n\t\ttextureHeight,\n\t\tformat,\n\t\tminFilter,\n\t\tmagFilter,\n\t\twrapS,\n\t\twrapT,\n\t\ttype\n\t);\n\n\treturn texture;\n}\n\nexport function createImageTexture(\n\tgl: WebGLRenderingContext,\n\tcanvasImage: HTMLImageElement | HTMLCanvasElement,\n\tformat: number = RGB,\n\tisFlip: boolean = false,\n\tisMipmap: boolean = false\n) {\n\treturn createCustomTypeImageTexture(\n\t\tgl,\n\t\tcanvasImage,\n\t\tformat,\n\t\tgl.UNSIGNED_BYTE,\n\t\tisFlip,\n\t\tisMipmap\n\t);\n}\n\nexport function createCustomTypeImageTexture(\n\tgl: WebGLRenderingContext,\n\tcanvasImage: HTMLImageElement | HTMLCanvasElement,\n\tformat: number = RGB,\n\ttype: number,\n\tisFlip: boolean = false,\n\tisMipmap: boolean = false\n) {\n\tconst texture = gl.createTexture();\n\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\n\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, isFlip ? 0 : 1);\n\tgl.texImage2D(gl.TEXTURE_2D, 0, format, format, type, canvasImage);\n\n\tif (isPowerOf2(canvasImage.width) && isPowerOf2(canvasImage.height) && isMipmap) {\n\t\t// Yes, it's a power of 2. Generate mips.\n\t\tgl.generateMipmap(gl.TEXTURE_2D);\n\t} else {\n\t\t// No, it's not a power of 2. Turn of mips and set\n\t\t// wrapping to clamp to edge\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\t}\n\n\treturn texture;\n}\n\nfunction isPowerOf2(value: number) {\n\treturn (value & (value - 1)) === 0;\n}\n\n/**\n *\n * @param gl\n * @param texture\n * @param image\n * @param format\n */\nexport function updateImageTexture(\n\tgl: WebGLRenderingContext,\n\ttexture: WebGLTexture,\n\timage: HTMLImageElement,\n\tformat: number = RGB\n) {\n\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\tgl.texImage2D(gl.TEXTURE_2D, 0, format, format, gl.UNSIGNED_BYTE, image);\n\n\tif (isPowerOf2(image.width) && isPowerOf2(image.height)) {\n\t\t// Yes, it's a power of 2. Generate mips.\n\t\tgl.generateMipmap(gl.TEXTURE_2D);\n\t} else {\n\t\t// No, it's not a power of 2. Turn of mips and set\n\t\t// wrapping to clamp to edge\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\t}\n}\n\nexport function updateEmptyImageTexture(\n\tgl: WebGLRenderingContext,\n\ttexture: WebGLTexture,\n\ttextureWidth: number,\n\ttextureHeight: number,\n\tformat: number = RGB,\n\tminFilter: number = LINEAR,\n\tmagFilter: number = LINEAR,\n\twrapS: number = CLAMP_TO_EDGE,\n\twrapT: number = CLAMP_TO_EDGE,\n\ttype: number = UNSIGNED_BYTE\n) {\n\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\n\t// define size and format of level 0\n\tconst level = 0;\n\tconst border = 0;\n\n\t// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texImage2D\n\tgl.texImage2D(gl.TEXTURE_2D, level, format, textureWidth, textureHeight, 0, format, type, null);\n\n\t// set the filtering so we don't need mips\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magFilter);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapS);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapT);\n\n\treturn texture;\n}\n\n/**\n *\n * @param gl\n * @param texture\n * @param uniformLocation\n * @param textureNum\n */\nexport function activeTexture(\n\tgl: WebGLRenderingContext,\n\ttexture: WebGLTexture,\n\tuniformLocation: WebGLUniformLocation,\n\ttextureNum: number = 0\n) {\n\tconst activeTextureNum = gl.TEXTURE0 + textureNum;\n\tgl.activeTexture(activeTextureNum);\n\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\tgl.uniform1i(uniformLocation, textureNum);\n}\n","import { vec3, vec2 } from 'gl-matrix';\r\nimport { Camera } from '../../camera/camera';\r\n\r\n/**\r\n * load json with ajax\r\n *\r\n * @param url url to load json file\r\n */\r\nexport function getAjaxJson(url: string, callback: Function) {\r\n\tconst xhr = new XMLHttpRequest();\r\n\txhr.open('GET', url, true);\r\n\r\n\txhr.onreadystatechange = () => {\r\n\t\tif (xhr.readyState === 4) {\r\n\t\t\tif (xhr.status === 200) {\r\n\t\t\t\tconst resp: string = xhr.responseText;\r\n\t\t\t\tconst respJson = JSON.parse(resp);\r\n\t\t\t\tcallback(respJson);\r\n\t\t\t\t// resolve(respJson);\r\n\t\t\t} else {\r\n\t\t\t\t// reject(xhr.status);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// reject(xhr.status);\r\n\t\t}\r\n\t};\r\n\r\n\txhr.send();\r\n}\r\n\r\n/**\r\n *\r\n * @param imageUrl\r\n */\r\nexport function getImage(imageUrl: string, callback: Function) {\r\n\tconst image: HTMLImageElement = new Image();\r\n\timage.onload = () => {\r\n\t\tcallback(image);\r\n\t};\r\n\timage.onerror = () => {\r\n\t\tconsole.warn(`image(${imageUrl}) load err`);\r\n\t};\r\n\r\n\timage.src = imageUrl;\r\n}\r\n\r\n/**\r\n *\r\n * @param dracoUrl\r\n * @param callback\r\n *\r\n * https://github.com/kioku-systemk/dracoSample/blob/5611528416d4e0afb10cbec52d70493602d8a552/dracoloader.js#L210\r\n *\r\n */\r\nexport function loadDraco(dracoUrl: string, callback: Function) {\r\n\tlet xhr = new XMLHttpRequest();\r\n\txhr.responseType = 'arraybuffer';\r\n\txhr.onreadystatechange = function() {\r\n\t\tif (xhr.readyState === 4) {\r\n\t\t\tif (xhr.status === 200 || xhr.status === 0) {\r\n\t\t\t\tcallback(xhr.response);\r\n\t\t\t} else {\r\n\t\t\t\tconsole.error(\"Couldn't load [\" + dracoUrl + '] [' + xhr.status + ']');\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\txhr.open('GET', dracoUrl, true);\r\n\txhr.send(null);\r\n}\r\n","export function getSphere(\r\n\tradius: number = 2,\r\n\tlatitudeBands: number = 64,\r\n\tlongitudeBands: number = 64\r\n) {\r\n\tconst vertices = [];\r\n\tconst textures = [];\r\n\tconst normals = [];\r\n\tconst indices = [];\r\n\r\n\tfor (let latNumber = 0; latNumber <= latitudeBands; latNumber = latNumber + 1) {\r\n\t\tconst theta = (latNumber * Math.PI) / latitudeBands;\r\n\t\tconst sinTheta = Math.sin(theta);\r\n\t\tconst cosTheta = Math.cos(theta);\r\n\r\n\t\tfor (let longNumber = 0; longNumber <= longitudeBands; longNumber = longNumber + 1) {\r\n\t\t\tconst phi = (longNumber * 2 * Math.PI) / longitudeBands;\r\n\t\t\tconst sinPhi = Math.sin(phi);\r\n\t\t\tconst cosPhi = Math.cos(phi);\r\n\r\n\t\t\tconst x = cosPhi * sinTheta;\r\n\t\t\tconst y = cosTheta;\r\n\t\t\tconst z = sinPhi * sinTheta;\r\n\t\t\tconst u = 1 - longNumber / longitudeBands;\r\n\t\t\tconst v = 1 - latNumber / latitudeBands;\r\n\r\n\t\t\tnormals.push(x, y, z);\r\n\t\t\ttextures.push(u, v);\r\n\t\t\tvertices.push(radius * x, radius * y, radius * z);\r\n\t\t}\r\n\t}\r\n\r\n\tfor (let latNumber = 0; latNumber < latitudeBands; latNumber = latNumber + 1) {\r\n\t\tfor (let longNumber = 0; longNumber < longitudeBands; longNumber = longNumber + 1) {\r\n\t\t\tlet first = latNumber * (longitudeBands + 1) + longNumber;\r\n\t\t\tlet second = first + longitudeBands + 1;\r\n\t\t\tindices.push(second, first, first + 1, second + 1, second, first + 1);\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tvertices: vertices,\r\n\t\tuvs: textures,\r\n\t\tnormals: normals,\r\n\t\tindices: indices\r\n\t};\r\n}\r\n\r\nexport function getPlane(\r\n\twidth: number,\r\n\theight: number,\r\n\twidthSegment: number,\r\n\theightSegment: number\r\n) {\r\n\tlet vertices = [];\r\n\tlet uvs = [];\r\n\tlet xRate = 1 / widthSegment;\r\n\tlet yRate = 1 / heightSegment;\r\n\r\n\t// set vertices and barycentric vertices\r\n\tfor (let yy = 0; yy <= heightSegment; yy++) {\r\n\t\tlet yPos = (-0.5 + yRate * yy) * height;\r\n\r\n\t\tfor (let xx = 0; xx <= widthSegment; xx++) {\r\n\t\t\tlet xPos = (-0.5 + xRate * xx) * width;\r\n\t\t\tvertices.push(xPos);\r\n\t\t\tvertices.push(yPos);\r\n\t\t\tuvs.push(xx / widthSegment);\r\n\t\t\tuvs.push(yy / heightSegment);\r\n\t\t}\r\n\t}\r\n\r\n\tlet indices = [];\r\n\r\n\tfor (let yy = 0; yy < heightSegment; yy++) {\r\n\t\tfor (let xx = 0; xx < widthSegment; xx++) {\r\n\t\t\tlet rowStartNum = yy * (widthSegment + 1);\r\n\t\t\tlet nextRowStartNum = (yy + 1) * (widthSegment + 1);\r\n\r\n\t\t\tindices.push(rowStartNum + xx);\r\n\t\t\tindices.push(rowStartNum + xx + 1);\r\n\t\t\tindices.push(nextRowStartNum + xx);\r\n\r\n\t\t\tindices.push(rowStartNum + xx + 1);\r\n\t\t\tindices.push(nextRowStartNum + xx + 1);\r\n\t\t\tindices.push(nextRowStartNum + xx);\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tvertices: vertices,\r\n\t\tuvs: uvs,\r\n\t\tindices: indices\r\n\t};\r\n}\r\n\r\nexport function mergeGeomtory(\r\n\tgeometries: { vertices: number[]; indices: number[]; normals: number[]; uvs: number[] }[]\r\n) {\r\n\tconst vertices = [];\r\n\tconst normals = [];\r\n\tconst uvs = [];\r\n\tconst indices = [];\r\n\r\n\tlet lastVertices = 0;\r\n\r\n\tfor (let ii = 0; ii < geometries.length; ii++) {\r\n\t\tlet geometry = geometries[ii];\r\n\r\n\t\tif (geometry.indices.length > 0) {\r\n\t\t\tfor (let ii = 0; ii < geometry.indices.length; ii++) {\r\n\t\t\t\tindices.push(geometry.indices[ii] + lastVertices / 3);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (geometry.vertices.length > 0) {\r\n\t\t\tfor (let ii = 0; ii < geometry.vertices.length; ii++) {\r\n\t\t\t\tvertices.push(geometry.vertices[ii]);\r\n\t\t\t}\r\n\r\n\t\t\tlastVertices += geometry.vertices.length;\r\n\t\t}\r\n\r\n\t\tif (geometry.normals.length > 0) {\r\n\t\t\tfor (let ii = 0; ii < geometry.normals.length; ii++) {\r\n\t\t\t\tnormals.push(geometry.normals[ii]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (geometry.uvs.length > 0) {\r\n\t\t\tfor (let ii = 0; ii < geometry.uvs.length; ii++) {\r\n\t\t\t\tuvs.push(geometry.uvs[ii]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tvertices,\r\n\t\tnormals,\r\n\t\tuvs,\r\n\t\tindices\r\n\t};\r\n}\r\n","// segment is one\nexport function createSimpleBox() {\n\tconst unit = 0.5;\n\tconst positions = [\n\t\t// Front face\n\t\t-unit,\n\t\t-unit,\n\t\tunit,\n\t\tunit,\n\t\t-unit,\n\t\tunit,\n\t\tunit,\n\t\tunit,\n\t\tunit,\n\t\t-unit,\n\t\tunit,\n\t\tunit,\n\n\t\t// Back face\n\t\t-unit,\n\t\t-unit,\n\t\t-unit,\n\t\t-unit,\n\t\tunit,\n\t\t-unit,\n\t\tunit,\n\t\tunit,\n\t\t-unit,\n\t\tunit,\n\t\t-unit,\n\t\t-unit,\n\n\t\t// Top face\n\t\t-unit,\n\t\tunit,\n\t\t-unit,\n\t\t-unit,\n\t\tunit,\n\t\tunit,\n\t\tunit,\n\t\tunit,\n\t\tunit,\n\t\tunit,\n\t\tunit,\n\t\t-unit,\n\n\t\t// Bottom face\n\t\t-unit,\n\t\t-unit,\n\t\t-unit,\n\t\tunit,\n\t\t-unit,\n\t\t-unit,\n\t\tunit,\n\t\t-unit,\n\t\tunit,\n\t\t-unit,\n\t\t-unit,\n\t\tunit,\n\n\t\t// Right face\n\t\tunit,\n\t\t-unit,\n\t\t-unit,\n\t\tunit,\n\t\tunit,\n\t\t-unit,\n\t\tunit,\n\t\tunit,\n\t\tunit,\n\t\tunit,\n\t\t-unit,\n\t\tunit,\n\n\t\t// Left face\n\t\t-unit,\n\t\t-unit,\n\t\t-unit,\n\t\t-unit,\n\t\t-unit,\n\t\tunit,\n\t\t-unit,\n\t\tunit,\n\t\tunit,\n\t\t-unit,\n\t\tunit,\n\t\t-unit\n\t];\n\n\tconst indices = [\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t0,\n\t\t2,\n\t\t3, // front\n\t\t4,\n\t\t5,\n\t\t6,\n\t\t4,\n\t\t6,\n\t\t7, // back\n\t\t8,\n\t\t9,\n\t\t10,\n\t\t8,\n\t\t10,\n\t\t11, // top\n\t\t12,\n\t\t13,\n\t\t14,\n\t\t12,\n\t\t14,\n\t\t15, // bottom\n\t\t16,\n\t\t17,\n\t\t18,\n\t\t16,\n\t\t18,\n\t\t19, // right\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t20,\n\t\t22,\n\t\t23 // left\n\t];\n\n\tconst uvs = [\n\t\t// Front\n\t\t0.0,\n\t\t0.0,\n\t\t1.0,\n\t\t0.0,\n\t\t1.0,\n\t\t1.0,\n\t\t0.0,\n\t\t1.0,\n\t\t// Back\n\t\t0.0,\n\t\t0.0,\n\t\t1.0,\n\t\t0.0,\n\t\t1.0,\n\t\t1.0,\n\t\t0.0,\n\t\t1.0,\n\t\t// Top\n\t\t0.0,\n\t\t0.0,\n\t\t1.0,\n\t\t0.0,\n\t\t1.0,\n\t\t1.0,\n\t\t0.0,\n\t\t1.0,\n\t\t// Bottom\n\t\t0.0,\n\t\t0.0,\n\t\t1.0,\n\t\t0.0,\n\t\t1.0,\n\t\t1.0,\n\t\t0.0,\n\t\t1.0,\n\t\t// Right\n\t\t0.0,\n\t\t0.0,\n\t\t1.0,\n\t\t0.0,\n\t\t1.0,\n\t\t1.0,\n\t\t0.0,\n\t\t1.0,\n\t\t// Left\n\t\t0.0,\n\t\t0.0,\n\t\t1.0,\n\t\t0.0,\n\t\t1.0,\n\t\t1.0,\n\t\t0.0,\n\t\t1.0\n\t];\n\n\tconst normals = [\n\t\t// Front\n\t\t0.0,\n\t\t0.0,\n\t\t1.0,\n\t\t0.0,\n\t\t0.0,\n\t\t1.0,\n\t\t0.0,\n\t\t0.0,\n\t\t1.0,\n\t\t0.0,\n\t\t0.0,\n\t\t1.0,\n\n\t\t// Back\n\t\t0.0,\n\t\t0.0,\n\t\t-1.0,\n\t\t0.0,\n\t\t0.0,\n\t\t-1.0,\n\t\t0.0,\n\t\t0.0,\n\t\t-1.0,\n\t\t0.0,\n\t\t0.0,\n\t\t-1.0,\n\n\t\t// Top\n\t\t0.0,\n\t\t1.0,\n\t\t0.0,\n\t\t0.0,\n\t\t1.0,\n\t\t0.0,\n\t\t0.0,\n\t\t1.0,\n\t\t0.0,\n\t\t0.0,\n\t\t1.0,\n\t\t0.0,\n\n\t\t// Bottom\n\t\t0.0,\n\t\t-1.0,\n\t\t0.0,\n\t\t0.0,\n\t\t-1.0,\n\t\t0.0,\n\t\t0.0,\n\t\t-1.0,\n\t\t0.0,\n\t\t0.0,\n\t\t-1.0,\n\t\t0.0,\n\n\t\t// Right\n\t\t1.0,\n\t\t0.0,\n\t\t0.0,\n\t\t1.0,\n\t\t0.0,\n\t\t0.0,\n\t\t1.0,\n\t\t0.0,\n\t\t0.0,\n\t\t1.0,\n\t\t0.0,\n\t\t0.0,\n\n\t\t// Left\n\t\t-1.0,\n\t\t0.0,\n\t\t0.0,\n\t\t-1.0,\n\t\t0.0,\n\t\t0.0,\n\t\t-1.0,\n\t\t0.0,\n\t\t0.0,\n\t\t-1.0,\n\t\t0.0,\n\t\t0.0\n\t];\n\n\treturn {\n\t\tvertices: positions,\n\t\tnormals: normals,\n\t\tuvs: uvs,\n\t\tindices: indices\n\t};\n}\n\nexport function createSimplePlane() {\n\tconst unit = 0.5;\n\n\tconst positions = [-unit, -unit, 0.0, unit, -unit, 0.0, unit, unit, 0.0, -unit, unit, 0.0];\n\n\tconst indices = [\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t0,\n\t\t2,\n\t\t3 // front\n\t];\n\n\tconst uvs = [0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0];\n\n\tconst normals = [\n\t\t// Front\n\t\t0.0,\n\t\t0.0,\n\t\t1.0,\n\t\t0.0,\n\t\t0.0,\n\t\t1.0,\n\t\t0.0,\n\t\t0.0,\n\t\t1.0,\n\t\t0.0,\n\t\t0.0,\n\t\t1.0\n\t];\n\n\treturn {\n\t\tvertices: positions,\n\t\tnormals: normals,\n\t\tuvs: uvs,\n\t\tindices: indices\n\t};\n}\n\nexport function createSuperSimpleplane(scaleX: number = 1, scaleY: number = 1) {\n\treturn new Float32Array([-scaleX, -scaleY, scaleX, -scaleY, -scaleX, scaleY, scaleX, scaleY]);\n}\n","export const fullscreenVertShader = `\nprecision highp float;\n\nattribute vec3 position;\n\nuniform vec2 px;\n\nvarying vec2 vUv;\n\nvoid main(){\n    vUv = vec2(0.5)+(position.xy)*0.5;\n    gl_Position = vec4(position, 1.0);\n}\n`;\n\nexport const fillFragShader = `\nprecision highp float;\n\nvarying vec2 vUv;\n\nvoid main(){\n    gl_FragColor = vec4(vUv, 0.0, 1.0);\n}\n`;\n\nexport const texFragShader = `\nprecision highp float;\n\nuniform sampler2D uTexture;\n\nvarying vec2 vUv;\n\nvoid main(){\n    vec4 texColor = texture2D(uTexture, vUv);\n    gl_FragColor = texColor;\n}\n`;\n","import { Vector3 } from '../interfaces/interface';\r\nexport function clamp(value: number, min: number, max: number) {\r\n\treturn Math.min(Math.max(value, min), max);\r\n}\r\n\r\nexport function range(min: number, max: number) {\r\n\treturn (max - min) * Math.random() + min;\r\n}\r\n\r\n// https://stackoverflow.com/questions/32861804/how-to-calculate-the-centre-point-of-a-circle-given-three-points\r\nexport function calculateCircleCenter(A: Vector3, B: Vector3, C: Vector3) {\r\n\tconst yDeltaA = B.y - A.y;\r\n\tconst xDeltaA = B.x - A.x;\r\n\tconst yDeltaB = C.y - B.y;\r\n\tconst xDeltaB = C.x - B.x;\r\n\r\n\tlet center = { x: 0, y: 0, z: 0 };\r\n\r\n\tconst aSlope = yDeltaA / xDeltaA;\r\n\tconst bSlope = yDeltaB / xDeltaB;\r\n\r\n\tcenter.x =\r\n\t\t(aSlope * bSlope * (A.y - C.y) + bSlope * (A.x + B.x) - aSlope * (B.x + C.x)) /\r\n\t\t(2 * (bSlope - aSlope));\r\n\tcenter.y = (-1 * (center.x - (A.x + B.x) / 2)) / aSlope + (A.y + B.y) / 2;\r\n\r\n\treturn center;\r\n}\r\n\r\nexport function mix(x: number, y: number, a: number) {\r\n\treturn x * (1 - a) + y * a;\r\n}\r\n\r\nexport function degToRad(value: number) {\r\n\t// Math.PI / 180 = 0.017453292519943295\r\n\treturn value * 0.017453292519943295;\r\n}\r\n\r\nexport function radToDeg(value: number) {\r\n\t// 180 / Math.PI = 57.29577951308232\r\n\treturn 57.29577951308232 * value;\r\n}\r\n","import { vec3, mat4, mat3 } from 'gl-matrix';\r\nimport { Box, Vector3 } from '../interfaces/interface';\r\n\r\nexport class Ray {\r\n\tprivate isPrev: boolean = false;\r\n\tprivate orig: vec3 = vec3.create();\r\n\tprivate dir: vec3 = vec3.create();\r\n\tprivate worldMatrix3Inv: mat3 = mat3.create();\r\n\r\n\tintersect(box: Box) {\r\n\t\tlet { min, max } = box;\r\n\r\n\t\tlet tmin = (min.x - this.orig[0]) / this.dir[0];\r\n\t\tlet tmax = (max.x - this.orig[0]) / this.dir[0];\r\n\r\n\t\tlet minY = tmin * this.dir[1] + this.orig[1];\r\n\t\tlet maxY = tmax * this.dir[1] + this.orig[1];\r\n\r\n\t\tif (minY > maxY) {\r\n\t\t\tlet { minVal, maxVal } = this.swap(minY, maxY);\r\n\t\t\tminY = minVal;\r\n\t\t\tmaxY = maxVal;\r\n\t\t}\r\n\t\tif (minY > max.y || maxY < min.y) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tlet minZ = tmin * this.dir[2] + this.orig[2];\r\n\t\tlet maxZ = tmax * this.dir[2] + this.orig[2];\r\n\r\n\t\tif (minZ > maxZ) {\r\n\t\t\tlet { minVal, maxVal } = this.swap(minZ, maxZ);\r\n\t\t\tminZ = minVal;\r\n\t\t\tmaxZ = maxVal;\r\n\t\t}\r\n\r\n\t\tif (minZ > max.z || maxZ < min.z) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tthis.isPrev = true;\r\n\r\n\t\treturn { tmin, tmax };\r\n\t}\r\n\r\n\trayCast(faces: [vec3, vec3, vec3][], worldMatrixInv: mat4) {\r\n\t\tconst transDir = vec3.create();\r\n\t\tconst transOrig = vec3.create();\r\n\r\n\t\tmat3.fromMat4(this.worldMatrix3Inv, worldMatrixInv);\r\n\t\tvec3.transformMat3(transDir, this.dir, this.worldMatrix3Inv);\r\n\t\tvec3.normalize(transDir, transDir);\r\n\t\tvec3.transformMat4(transOrig, this.orig, worldMatrixInv);\r\n\r\n\t\treturn this.intersectFaces(faces, transDir, transOrig);\r\n\t}\r\n\r\n\tintersectFaces(faces: [vec3, vec3, vec3][], dir: vec3, orig: vec3) {\r\n\t\tlet intersectFace;\r\n\t\tfor (let ii = 0; ii < faces.length; ii++) {\r\n\t\t\tlet pts = faces[ii];\r\n\t\t\tlet intersect = this.intersectPts(pts[0], pts[1], pts[2], dir, orig);\r\n\t\t\tif (intersect) {\r\n\t\t\t\tif (!intersectFace || intersectFace.t > intersect.t) intersectFace = intersect;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn intersectFace;\r\n\t}\r\n\r\n\t// https://www.scratchapixel.com/lessons/3d-basic-rendering/ray-tracing-rendering-a-triangle/ray-triangle-intersection-geometric-solution\r\n\t// https://stackoverflow.com/questions/42740765/intersection-between-line-and-triangle-in-3d\r\n\r\n\tintersectPts(pt0: vec3, pt1: vec3, pt2: vec3, dir: vec3, orig: vec3) {\r\n\t\tlet dir0Vec = vec3.create();\r\n\t\tlet dir1Vec = vec3.create();\r\n\t\tlet nVec = vec3.create();\r\n\r\n\t\tvec3.subtract(dir0Vec, pt1, pt0);\r\n\t\tvec3.subtract(dir1Vec, pt2, pt0);\r\n\t\tvec3.cross(nVec, dir0Vec, dir1Vec);\r\n\t\tlet D = -this.dot(nVec, pt0);\r\n\r\n\t\tif (Math.abs(this.dot(dir, nVec)) < Number.EPSILON) return false;\r\n\r\n\t\tlet t = -(this.dot(nVec, orig) + D) / this.dot(nVec, dir);\r\n\t\tlet intersectPt = [dir[0] * t + orig[0], dir[1] * t + orig[1], dir[2] * t + orig[2]];\r\n\r\n\t\tlet dir0 = [pt1[0] - pt0[0], pt1[1] - pt0[1], pt1[2] - pt0[2]];\r\n\t\tlet intersectPt0 = [\r\n\t\t\tintersectPt[0] - pt0[0],\r\n\t\t\tintersectPt[1] - pt0[1],\r\n\t\t\tintersectPt[2] - pt0[2]\r\n\t\t];\r\n\t\tlet dotProduct0Vec = vec3.create();\r\n\t\tvec3.cross(dotProduct0Vec, dir0, intersectPt0);\r\n\t\tlet judge0 = this.dot(dotProduct0Vec, nVec);\r\n\t\tif (judge0 < 0) return false;\r\n\r\n\t\tlet dir1 = [pt2[0] - pt1[0], pt2[1] - pt1[1], pt2[2] - pt1[2]];\r\n\t\tlet intersectPt1 = [\r\n\t\t\tintersectPt[0] - pt1[0],\r\n\t\t\tintersectPt[1] - pt1[1],\r\n\t\t\tintersectPt[2] - pt1[2]\r\n\t\t];\r\n\t\tlet dotProduct1Vec = vec3.create();\r\n\t\tvec3.cross(dotProduct1Vec, dir1, intersectPt1);\r\n\t\tlet judge1 = this.dot(dotProduct1Vec, nVec);\r\n\t\tif (judge1 < 0) return false;\r\n\r\n\t\tlet dir2 = [pt0[0] - pt2[0], pt0[1] - pt2[1], pt0[2] - pt2[2]];\r\n\t\tlet intersectPt2 = [\r\n\t\t\tintersectPt[0] - pt2[0],\r\n\t\t\tintersectPt[1] - pt2[1],\r\n\t\t\tintersectPt[2] - pt2[2]\r\n\t\t];\r\n\t\tlet dotProduct2Vec = vec3.create();\r\n\t\tvec3.cross(dotProduct2Vec, dir2, intersectPt2);\r\n\t\tlet judge2 = this.dot(dotProduct2Vec, nVec);\r\n\t\tif (judge2 < 0) return false;\r\n\r\n\t\treturn { t: t, pt: intersectPt };\r\n\t}\r\n\r\n\tcalcDirection(startPt: vec3, endPt: vec3) {\r\n\t\tlet dir = vec3.create();\r\n\t\tvec3.subtract(dir, endPt, startPt);\r\n\t\tvec3.normalize(dir, dir);\r\n\t\tthis.dir = dir;\r\n\t\tthis.orig = startPt;\r\n\t}\r\n\r\n\tswap(valA: number, valB: number) {\r\n\t\tlet tempVal = valA;\r\n\t\tvalA = valB;\r\n\t\tvalB = tempVal;\r\n\r\n\t\treturn { minVal: valA, maxVal: valB };\r\n\t}\r\n\r\n\tdot(a: vec3, b: vec3) {\r\n\t\treturn a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\r\n\t}\r\n}\r\n","import { mat4 } from 'gl-matrix';\r\nimport { Vector3 } from '../interfaces/interface';\r\n\r\nexport class Camera {\r\n\tpublic type: string;\r\n\tpublic position: Vector3 = { x: 0, y: 0, z: 0 };\r\n\tpublic lookAtPosition: Vector3 = { x: 0, y: 0, z: 0 };\r\n\tpublic viewMatrix: mat4 = mat4.create();\r\n\tpublic viewMatrixInverse: mat4 = mat4.create();\r\n\tpublic projectionMatrix: mat4 = mat4.create();\r\n\tpublic projectionMatrixInverse: mat4 = mat4.create();\r\n\r\n\tconstructor(type: string = 'camera') {\r\n\t\tthis.type = type;\r\n\t}\r\n\r\n\tpublic updatePosition(xx = 0, yy = 0, zz = 0) {\r\n\t\tthis.position.x = xx;\r\n\t\tthis.position.y = yy;\r\n\t\tthis.position.z = zz;\r\n\t}\r\n\r\n\tpublic updateLookAtPosition(xx = 0, yy = 0, zz = -100) {\r\n\t\tthis.lookAtPosition.x = xx;\r\n\t\tthis.lookAtPosition.y = yy;\r\n\t\tthis.lookAtPosition.z = zz;\r\n\t}\r\n\r\n\tpublic updateViewMatrix() {\r\n\t\tmat4.lookAt(\r\n\t\t\tthis.viewMatrix,\r\n\t\t\t[this.position.x, this.position.y, this.position.z],\r\n\t\t\t[this.lookAtPosition.x, this.lookAtPosition.y, this.lookAtPosition.z],\r\n\t\t\t[0, 1, 0]\r\n\t\t);\r\n\r\n\t\tmat4.invert(this.viewMatrixInverse, this.viewMatrix);\r\n\t}\r\n}\r\n\r\n// ---------------------\r\n\r\nexport class PerspectiveCamera extends Camera {\r\n\tprivate width: number;\r\n\tprivate height: number;\r\n\tprivate fov: number;\r\n\tprivate near: number;\r\n\tprivate far: number;\r\n\r\n\tconstructor(\r\n\t\twidth: number,\r\n\t\theight: number,\r\n\t\tfov: number = 45,\r\n\t\tnear: number = 0.1,\r\n\t\tfar: number = 1000\r\n\t) {\r\n\t\tsuper('perspective');\r\n\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\tthis.fov = fov;\r\n\t\tthis.near = near;\r\n\t\tthis.far = far;\r\n\r\n\t\tthis.updatePerspective();\r\n\t}\r\n\r\n\tpublic updatePerspective() {\r\n\t\tmat4.perspective(\r\n\t\t\tthis.projectionMatrix,\r\n\t\t\t(this.fov / 180) * Math.PI,\r\n\t\t\tthis.width / this.height,\r\n\t\t\tthis.near,\r\n\t\t\tthis.far\r\n\t\t);\r\n\r\n\t\tmat4.invert(this.projectionMatrixInverse, this.projectionMatrix);\r\n\t}\r\n\r\n\tpublic updateSize(width: number, height: number) {\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\r\n\t\tthis.updatePerspective();\r\n\t}\r\n\r\n\tpublic updateFocus(near: number, far: number) {\r\n\t\tif (near) this.near = near;\r\n\t\tif (far) this.far = far;\r\n\r\n\t\tthis.updatePerspective();\r\n\t}\r\n\r\n\tpublic updatefov(angle: number) {\r\n\t\tthis.fov = angle;\r\n\r\n\t\tthis.updatePerspective();\r\n\t}\r\n}\r\n\r\n// ---------------------\r\n\r\nexport class OrthoCamera extends Camera {\r\n\tprivate left: number;\r\n\tprivate right: number;\r\n\tprivate bottom: number;\r\n\tprivate top: number;\r\n\tprivate near: number;\r\n\tprivate far: number;\r\n\r\n\tconstructor(\r\n\t\tleft: number,\r\n\t\tright: number,\r\n\t\tbottom: number,\r\n\t\ttop: number,\r\n\t\tnear: number,\r\n\t\tfar: number\r\n\t) {\r\n\t\tsuper('ortho');\r\n\r\n\t\tthis.left = left;\r\n\t\tthis.right = right;\r\n\t\tthis.bottom = bottom;\r\n\t\tthis.top = top;\r\n\t\tthis.near = near;\r\n\t\tthis.far = far;\r\n\r\n\t\tthis.updatePerspective();\r\n\t}\r\n\r\n\tpublic updateSize(left: number, right: number, bottom: number, top: number) {\r\n\t\tthis.left = left;\r\n\t\tthis.right = right;\r\n\t\tthis.bottom = bottom;\r\n\t\tthis.top = top;\r\n\r\n\t\tthis.updatePerspective();\r\n\t}\r\n\r\n\tpublic updateFocus(near: number, far: number) {\r\n\t\tif (near) this.near = near;\r\n\t\tif (far) this.far = far;\r\n\r\n\t\tthis.updatePerspective();\r\n\t}\r\n\r\n\tpublic updatePerspective() {\r\n\t\tmat4.ortho(\r\n\t\t\tthis.projectionMatrix,\r\n\t\t\tthis.left,\r\n\t\t\tthis.right,\r\n\t\t\tthis.bottom,\r\n\t\t\tthis.top,\r\n\t\t\tthis.near,\r\n\t\t\tthis.far\r\n\t\t);\r\n\r\n\t\tmat4.invert(this.projectionMatrixInverse, this.projectionMatrix);\r\n\t}\r\n}\r\n","import { Camera } from '../camera/camera';\r\nimport { vec3 } from 'gl-matrix';\r\nimport { clamp } from '../math/math';\r\n\r\nclass DampedAction {\r\n\tprivate value: number = 0.0;\r\n\tprivate damping: number;\r\n\tconstructor() {\r\n\t\tthis.damping = 0.85;\r\n\t}\r\n\r\n\taddForce(force: number) {\r\n\t\tthis.value += force;\r\n\t}\r\n\r\n\t/** updates the damping and calls {@link damped-callback}. */\r\n\tupdate() {\r\n\t\tlet isActive = this.value * this.value > 0.000001;\r\n\t\tif (isActive) {\r\n\t\t\tthis.value *= this.damping;\r\n\t\t} else {\r\n\t\t\tthis.stop();\r\n\t\t}\r\n\t\treturn this.value;\r\n\t}\r\n\r\n\t/** stops the damping. */\r\n\tstop() {\r\n\t\tthis.value = 0.0;\r\n\t}\r\n}\r\n\r\nexport class CameraController {\r\n\tprivate camera: Camera;\r\n\tprivate domElement: HTMLElement;\r\n\tprivate target: vec3 = vec3.create();\r\n\tprivate minDistance: number = 0;\r\n\tprivate maxDistance: number = Infinity;\r\n\tprivate isEnabled: boolean = true;\r\n\tprivate isDamping: boolean;\r\n\tprivate dampingFactor: number;\r\n\tprivate isZoom: boolean;\r\n\tprivate zoomSpeed: number;\r\n\tprivate isRotate: boolean;\r\n\tprivate rotateSpeed: number;\r\n\tprivate isPan: boolean;\r\n\tprivate keyPanSpeed: number;\r\n\tprivate enableKeys: boolean;\r\n\tprivate keys: {\r\n\t\tLEFT: string;\r\n\t\tUP: string;\r\n\t\tRIGHT: string;\r\n\t\tBOTTOM: string;\r\n\t\tSHIFT: string;\r\n\t};\r\n\tprivate originTarget: vec3;\r\n\tprivate originPosition: vec3;\r\n\tprivate targetXDampedAction: DampedAction = new DampedAction();\r\n\tprivate targetYDampedAction: DampedAction = new DampedAction();\r\n\tprivate targetZDampedAction: DampedAction = new DampedAction();\r\n\tprivate targetThetaDampedAction: DampedAction = new DampedAction();\r\n\tprivate targetPhiDampedAction: DampedAction = new DampedAction();\r\n\tprivate targetRadiusDampedAction: DampedAction = new DampedAction();\r\n\tprivate _isShiftDown = false;\r\n\tprivate _rotateStart = {\r\n\t\tx: 9999,\r\n\t\ty: 9999\r\n\t};\r\n\tprivate _rotateEnd = {\r\n\t\tx: 9999,\r\n\t\ty: 9999\r\n\t};\r\n\tprivate _roatteDelta = {\r\n\t\tx: 9999,\r\n\t\ty: 9999\r\n\t};\r\n\tprivate _spherical: {\r\n\t\tradius: number;\r\n\t\ttheta: number;\r\n\t\tphi: number;\r\n\t};\r\n\tprivate _zoomDistanceEnd: number = 0;\r\n\tprivate _zoomDistance: number = 0;\r\n\tprivate state: string = '';\r\n\tprivate loopId: number = 0;\r\n\tprivate _panStart = { x: 0, y: 0 };\r\n\tprivate _panDelta = { x: 0, y: 0 };\r\n\tprivate _panEnd = { x: 0, y: 0 };\r\n\tconstructor(camera: Camera, domElement = document.body) {\r\n\t\tif (!camera) {\r\n\t\t\tconsole.error('camera is undefined');\r\n\t\t}\r\n\t\tthis.camera = camera;\r\n\t\tthis.domElement = domElement;\r\n\r\n\t\t// Set to true to enable damping (inertia)\r\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\r\n\t\tthis.isDamping = false;\r\n\t\tthis.dampingFactor = 0.25;\r\n\r\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\r\n\t\t// Set to false to disable zooming\r\n\t\tthis.isZoom = true;\r\n\t\tthis.zoomSpeed = 1.0;\r\n\r\n\t\t// Set to false to disable rotating\r\n\t\tthis.isRotate = true;\r\n\t\tthis.rotateSpeed = 1.0;\r\n\r\n\t\t// Set to false to disable panning\r\n\t\tthis.isPan = true;\r\n\t\tthis.keyPanSpeed = 7.0; // pixels moved per arrow key push\r\n\r\n\t\t// Set to false to disable use of the keys\r\n\t\tthis.enableKeys = true;\r\n\r\n\t\t// The four arrow keys\r\n\t\tthis.keys = {\r\n\t\t\tLEFT: '37',\r\n\t\t\tUP: '38',\r\n\t\t\tRIGHT: '39',\r\n\t\t\tBOTTOM: '40',\r\n\t\t\tSHIFT: '16'\r\n\t\t};\r\n\r\n\t\t// for reset\r\n\t\tthis.originTarget = vec3.create();\r\n\t\tthis.originPosition = vec3.create();\r\n\t\tthis.originPosition[0] = camera.position.x;\r\n\t\tthis.originPosition[1] = camera.position.x;\r\n\t\tthis.originPosition[2] = camera.position.x;\r\n\r\n\t\tlet dX = this.camera.position.x;\r\n\t\tlet dY = this.camera.position.y;\r\n\t\tlet dZ = this.camera.position.z;\r\n\t\tlet radius = Math.sqrt(dX * dX + dY * dY + dZ * dZ);\r\n\t\tlet theta = Math.atan2(this.camera.position.x, this.camera.position.z); // equator angle around y-up axis\r\n\t\tlet phi = Math.acos(clamp(this.camera.position.y / radius, -1, 1)); // polar angle\r\n\t\tthis._spherical = {\r\n\t\t\tradius: radius,\r\n\t\t\ttheta: theta,\r\n\t\t\tphi: phi\r\n\t\t};\r\n\r\n\t\tthis._bindEvens();\r\n\t\tthis.setEventHandler();\r\n\t\tthis.startTick();\r\n\t}\r\n\tsetEventHandler() {\r\n\t\tthis.domElement.addEventListener('contextmenu', this._contextMenuHandler, false);\r\n\t\tthis.domElement.addEventListener('mousedown', this._mouseDownHandler, false);\r\n\t\tthis.domElement.addEventListener('wheel', this._mouseWheelHandler, false);\r\n\r\n\t\tthis.domElement.addEventListener('touchstart', this._touchStartHandler, false);\r\n\t\tthis.domElement.addEventListener('touchmove', this._touchMoveHandler, false);\r\n\r\n\t\twindow.addEventListener('keydown', this._onKeyDownHandler, false);\r\n\t\twindow.addEventListener('keyup', this._onKeyUpHandler, false);\r\n\t}\r\n\tremoveEventHandler() {\r\n\t\tthis.domElement.removeEventListener('contextmenu', this._contextMenuHandler, false);\r\n\t\tthis.domElement.removeEventListener('mousedown', this._mouseDownHandler, false);\r\n\t\tthis.domElement.removeEventListener('wheel', this._mouseWheelHandler, false);\r\n\t\tthis.domElement.removeEventListener('mousemove', this._mouseMoveHandler, false);\r\n\t\twindow.removeEventListener('mouseup', this._mouseUpHandler, false);\r\n\r\n\t\tthis.domElement.removeEventListener('touchstart', this._touchStartHandler, false);\r\n\t\tthis.domElement.removeEventListener('touchmove', this._touchMoveHandler, false);\r\n\r\n\t\twindow.removeEventListener('keydown', this._onKeyDownHandler, false);\r\n\t\twindow.removeEventListener('keydown', this._onKeyUpHandler, false);\r\n\t}\r\n\tstartTick() {\r\n\t\tthis.loopId = requestAnimationFrame(this.tick);\r\n\t}\r\n\ttick() {\r\n\t\tthis.updateDampedAction();\r\n\t\tthis.updateCamera();\r\n\t\tthis.loopId = requestAnimationFrame(this.tick);\r\n\t}\r\n\tupdateDampedAction() {\r\n\t\tthis.target[0] += this.targetXDampedAction.update();\r\n\t\tthis.target[1] += this.targetYDampedAction.update();\r\n\t\tthis.target[2] += this.targetZDampedAction.update();\r\n\r\n\t\tthis._spherical.theta += this.targetThetaDampedAction.update();\r\n\t\tthis._spherical.phi += this.targetPhiDampedAction.update();\r\n\t\tthis._spherical.radius += this.targetRadiusDampedAction.update();\r\n\t}\r\n\tupdateCamera() {\r\n\t\tlet s = this._spherical;\r\n\t\tlet sinPhiRadius = Math.sin(s.phi) * s.radius;\r\n\r\n\t\tthis.camera.position.x = sinPhiRadius * Math.sin(s.theta) + this.target[0];\r\n\t\tthis.camera.position.y = Math.cos(s.phi) * s.radius + this.target[1];\r\n\t\tthis.camera.position.z = sinPhiRadius * Math.cos(s.theta) + this.target[2];\r\n\t\t// console.log(this.camera.position);\r\n\t\t// console.log(this.target);\r\n\r\n\t\tthis.camera.lookAtPosition.x = this.target[0];\r\n\t\tthis.camera.lookAtPosition.y = this.target[1];\r\n\t\tthis.camera.lookAtPosition.z = this.target[2];\r\n\r\n\t\tthis.camera.updateViewMatrix();\r\n\t}\r\n\t_bindEvens() {\r\n\t\tthis.tick = this.tick.bind(this);\r\n\t\tthis._contextMenuHandler = this._contextMenuHandler.bind(this);\r\n\t\tthis._mouseDownHandler = this._mouseDownHandler.bind(this);\r\n\t\tthis._mouseWheelHandler = this._mouseWheelHandler.bind(this);\r\n\t\tthis._mouseMoveHandler = this._mouseMoveHandler.bind(this);\r\n\t\tthis._mouseUpHandler = this._mouseUpHandler.bind(this);\r\n\r\n\t\tthis._touchStartHandler = this._touchStartHandler.bind(this);\r\n\t\tthis._touchMoveHandler = this._touchMoveHandler.bind(this);\r\n\r\n\t\tthis._onKeyDownHandler = this._onKeyDownHandler.bind(this);\r\n\t\tthis._onKeyUpHandler = this._onKeyUpHandler.bind(this);\r\n\t}\r\n\r\n\t_contextMenuHandler(event: MouseEvent) {\r\n\t\tif (!this.isEnabled) return;\r\n\r\n\t\tevent.preventDefault();\r\n\t}\r\n\t_mouseDownHandler(event: MouseEvent) {\r\n\t\tif (!this.isEnabled) return;\r\n\r\n\t\tif (event.button === 0) {\r\n\t\t\tthis.state = 'rotate';\r\n\t\t\tthis._rotateStart = {\r\n\t\t\t\tx: event.clientX,\r\n\t\t\t\ty: event.clientY\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tthis.state = 'pan';\r\n\t\t\tthis._panStart = {\r\n\t\t\t\tx: event.clientX,\r\n\t\t\t\ty: event.clientY\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tthis.domElement.addEventListener('mousemove', this._mouseMoveHandler, false);\r\n\t\twindow.addEventListener('mouseup', this._mouseUpHandler, false);\r\n\t}\r\n\t_mouseUpHandler() {\r\n\t\tthis.domElement.removeEventListener('mousemove', this._mouseMoveHandler, false);\r\n\t\twindow.removeEventListener('mouseup', this._mouseUpHandler, false);\r\n\t}\r\n\t_mouseMoveHandler(event: MouseEvent) {\r\n\t\tif (!this.isEnabled) return;\r\n\r\n\t\tif (this.state === 'rotate') {\r\n\t\t\tthis._rotateEnd = {\r\n\t\t\t\tx: event.clientX,\r\n\t\t\t\ty: event.clientY\r\n\t\t\t};\r\n\t\t\tthis._roatteDelta = {\r\n\t\t\t\tx: this._rotateEnd.x - this._rotateStart.x,\r\n\t\t\t\ty: this._rotateEnd.y - this._rotateStart.y\r\n\t\t\t};\r\n\r\n\t\t\tthis._updateRotateHandler();\r\n\r\n\t\t\tthis._rotateStart = {\r\n\t\t\t\tx: this._rotateEnd.x,\r\n\t\t\t\ty: this._rotateEnd.y\r\n\t\t\t};\r\n\t\t} else if (this.state === 'pan') {\r\n\t\t\tthis._panEnd = {\r\n\t\t\t\tx: event.clientX,\r\n\t\t\t\ty: event.clientY\r\n\t\t\t};\r\n\t\t\tthis._panDelta = {\r\n\t\t\t\tx: -0.5 * (this._panEnd.x - this._panStart.x),\r\n\t\t\t\ty: 0.5 * (this._panEnd.y - this._panStart.y)\r\n\t\t\t};\r\n\r\n\t\t\tthis._updatePanHandler();\r\n\t\t\tthis._panStart = {\r\n\t\t\t\tx: this._panEnd.x,\r\n\t\t\t\ty: this._panEnd.y\r\n\t\t\t};\r\n\t\t}\r\n\t\t// this.update();\r\n\t}\r\n\t_mouseWheelHandler(event: WheelEvent) {\r\n\t\tif (event.deltaY > 0) {\r\n\t\t\tthis.targetRadiusDampedAction.addForce(1);\r\n\t\t} else {\r\n\t\t\tthis.targetRadiusDampedAction.addForce(-1);\r\n\t\t}\r\n\t}\r\n\r\n\t_touchStartHandler(event: TouchEvent) {\r\n\t\tlet dX: number;\r\n\t\tlet dY: number;\r\n\r\n\t\tswitch (event.touches.length) {\r\n\t\t\tcase 1:\r\n\t\t\t\tthis.state = 'rotate';\r\n\t\t\t\tthis._rotateStart = {\r\n\t\t\t\t\tx: event.touches[0].clientX,\r\n\t\t\t\t\ty: event.touches[0].clientY\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tthis.state = 'zoom';\r\n\t\t\t\tdX = event.touches[1].clientX - event.touches[0].clientX;\r\n\t\t\t\tdY = event.touches[1].clientY - event.touches[0].clientY;\r\n\t\t\t\tthis._zoomDistance = Math.sqrt(dX * dX + dY * dY);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tthis.state = 'pan';\r\n\t\t\t\tthis._panStart = {\r\n\t\t\t\t\tx:\r\n\t\t\t\t\t\t(event.touches[0].clientX +\r\n\t\t\t\t\t\t\tevent.touches[1].clientX +\r\n\t\t\t\t\t\t\tevent.touches[2].clientX) /\r\n\t\t\t\t\t\t3,\r\n\t\t\t\t\ty:\r\n\t\t\t\t\t\t(event.touches[0].clientY +\r\n\t\t\t\t\t\t\tevent.touches[1].clientY +\r\n\t\t\t\t\t\t\tevent.touches[2].clientY) /\r\n\t\t\t\t\t\t3\r\n\t\t\t\t};\r\n\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t_touchMoveHandler(event: TouchEvent) {\r\n\t\tlet dX: number;\r\n\t\tlet dY: number;\r\n\t\tlet dDis: number;\r\n\r\n\t\tswitch (event.touches.length) {\r\n\t\t\tcase 1:\r\n\t\t\t\tif (this.state !== 'rotate') return;\r\n\t\t\t\tthis._rotateEnd = {\r\n\t\t\t\t\tx: event.touches[0].clientX,\r\n\t\t\t\t\ty: event.touches[0].clientY\r\n\t\t\t\t};\r\n\t\t\t\tthis._roatteDelta = {\r\n\t\t\t\t\tx: (this._rotateEnd.x - this._rotateStart.x) * 0.5,\r\n\t\t\t\t\ty: (this._rotateEnd.y - this._rotateStart.y) * 0.5\r\n\t\t\t\t};\r\n\r\n\t\t\t\tthis._updateRotateHandler();\r\n\r\n\t\t\t\tthis._rotateStart = {\r\n\t\t\t\t\tx: this._rotateEnd.x,\r\n\t\t\t\t\ty: this._rotateEnd.y\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tif (this.state !== 'zoom') return;\r\n\t\t\t\tdX = event.touches[1].clientX - event.touches[0].clientX;\r\n\t\t\t\tdY = event.touches[1].clientY - event.touches[0].clientY;\r\n\t\t\t\tthis._zoomDistanceEnd = Math.sqrt(dX * dX + dY * dY);\r\n\r\n\t\t\t\tdDis = this._zoomDistanceEnd - this._zoomDistance;\r\n\t\t\t\tdDis *= 1.5;\r\n\r\n\t\t\t\tlet targetRadius = this._spherical.radius - dDis;\r\n\t\t\t\ttargetRadius = clamp(targetRadius, this.minDistance, this.maxDistance);\r\n\t\t\t\tthis._zoomDistance = this._zoomDistanceEnd;\r\n\t\t\t\tthis._spherical.radius = targetRadius;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tthis._panEnd = {\r\n\t\t\t\t\tx:\r\n\t\t\t\t\t\t(event.touches[0].clientX +\r\n\t\t\t\t\t\t\tevent.touches[1].clientX +\r\n\t\t\t\t\t\t\tevent.touches[2].clientX) /\r\n\t\t\t\t\t\t3,\r\n\t\t\t\t\ty:\r\n\t\t\t\t\t\t(event.touches[0].clientY +\r\n\t\t\t\t\t\t\tevent.touches[1].clientY +\r\n\t\t\t\t\t\t\tevent.touches[2].clientY) /\r\n\t\t\t\t\t\t3\r\n\t\t\t\t};\r\n\t\t\t\tthis._panDelta = {\r\n\t\t\t\t\tx: this._panEnd.x - this._panStart.x,\r\n\t\t\t\t\ty: this._panEnd.y - this._panStart.y\r\n\t\t\t\t};\r\n\r\n\t\t\t\tthis._panDelta.x *= -1;\r\n\r\n\t\t\t\tthis._updatePanHandler();\r\n\t\t\t\tthis._panStart = {\r\n\t\t\t\t\tx: this._panEnd.x,\r\n\t\t\t\t\ty: this._panEnd.y\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\t// this.update();\r\n\t}\r\n\r\n\t_onKeyDownHandler(event: KeyboardEvent) {\r\n\t\tlet dX = 0;\r\n\t\tlet dY = 0;\r\n\r\n\t\tswitch (event.key) {\r\n\t\t\tcase this.keys.SHIFT:\r\n\t\t\t\tthis._isShiftDown = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase this.keys.LEFT:\r\n\t\t\t\tdX = -10;\r\n\t\t\t\tbreak;\r\n\t\t\tcase this.keys.RIGHT:\r\n\t\t\t\tdX = 10;\r\n\t\t\t\tbreak;\r\n\t\t\tcase this.keys.UP:\r\n\t\t\t\tdY = 10;\r\n\t\t\t\tbreak;\r\n\t\t\tcase this.keys.BOTTOM:\r\n\t\t\t\tdY = -10;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (!this._isShiftDown) {\r\n\t\t\tthis._panDelta = {\r\n\t\t\t\tx: dX,\r\n\t\t\t\ty: dY\r\n\t\t\t};\r\n\t\t\tthis._updatePanHandler();\r\n\t\t} else {\r\n\t\t\tthis._roatteDelta = {\r\n\t\t\t\tx: -dX,\r\n\t\t\t\ty: dY\r\n\t\t\t};\r\n\t\t\tthis._updateRotateHandler();\r\n\t\t}\r\n\t}\r\n\t_onKeyUpHandler(event: KeyboardEvent) {\r\n\t\tswitch (event.key) {\r\n\t\t\tcase this.keys.SHIFT:\r\n\t\t\t\tthis._isShiftDown = false;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t_updatePanHandler() {\r\n\t\tlet xDir = vec3.create();\r\n\t\tlet yDir = vec3.create();\r\n\t\tlet zDir = vec3.create();\r\n\t\tzDir[0] = this.target[0] - this.camera.position.x;\r\n\t\tzDir[1] = this.target[1] - this.camera.position.y;\r\n\t\tzDir[2] = this.target[2] - this.camera.position.z;\r\n\t\tvec3.normalize(zDir, zDir);\r\n\r\n\t\tvec3.cross(xDir, zDir, [0, 1, 0]);\r\n\t\tvec3.cross(yDir, xDir, zDir);\r\n\r\n\t\tconst scale = Math.max(this._spherical.radius / 2000, 0.001);\r\n\r\n\t\tthis.targetXDampedAction.addForce(\r\n\t\t\t(xDir[0] * this._panDelta.x + yDir[0] * this._panDelta.y) * scale\r\n\t\t);\r\n\t\tthis.targetYDampedAction.addForce(\r\n\t\t\t(xDir[1] * this._panDelta.x + yDir[1] * this._panDelta.y) * scale\r\n\t\t);\r\n\t\tthis.targetZDampedAction.addForce(\r\n\t\t\t(xDir[2] * this._panDelta.x + yDir[2] * this._panDelta.y) * scale\r\n\t\t);\r\n\t}\r\n\t_updateRotateHandler() {\r\n\t\tthis.targetThetaDampedAction.addForce(-this._roatteDelta.x / this.domElement.clientWidth);\r\n\t\tthis.targetPhiDampedAction.addForce(-this._roatteDelta.y / this.domElement.clientHeight);\r\n\t}\r\n}\r\n","// convert layout-bmfont-text into layout\r\n// https://github.com/Jam3/layout-bmfont-text\r\n\r\nconst X_HEIGHTS = ['x', 'e', 'a', 'o', 'n', 's', 'r', 'c', 'u', 'm', 'v', 'w', 'z'];\r\nconst M_WIDTHS = ['m', 'w'];\r\nconst CAP_HEIGHTS = ['H', 'I', 'N', 'E', 'F', 'K', 'L', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\r\nconst TAB_ID = '\\t'.charCodeAt(0);\r\nconst SPACE_ID = ' '.charCodeAt(0);\r\nconst ALIGN_LEFT = 0;\r\nconst ALIGN_CENTER = 1;\r\nconst ALIGN_RIGHT = 2;\r\n\r\nfunction number(num: any, def: any) {\r\n\treturn typeof num === 'number' ? num : typeof def === 'number' ? def : 0;\r\n}\r\n\r\nexport class TextLayout {\r\n\tprivate fontData: any;\r\n\tprivate options: any = {};\r\n\tprivate glyphs: any = [];\r\n\tprivate width: any;\r\n\tprivate height: any;\r\n\tprivate descender: any;\r\n\tprivate baseline: any;\r\n\tprivate xHeight: any;\r\n\tprivate capHeight: any;\r\n\tprivate lineHeight: any;\r\n\tprivate ascender: any;\r\n\tprivate linesTotal: any;\r\n\tprivate _fallbackTabGlyph: any;\r\n\tprivate _fallbackSpaceGlyph: any;\r\n\tprivate fallbackSpaceGlyph: any;\r\n\tprivate fallbackTabGlyph: any;\r\n\tconstructor(data: any, text: any, options = {}) {\r\n\t\tthis.fontData = data;\r\n\t\tthis.options = options;\r\n\t\tthis.options.fontData = this.fontData;\r\n\t\tthis.options.text = text;\r\n\r\n\t\tthis.update();\r\n\t}\r\n\r\n\tupdate() {\r\n\t\tthis.options.tabSize = this.options.tabSize ? this.options.tabSize : 4;\r\n\t\tif (!this.options.fontData) console.error('must provide a valid bitmap font');\r\n\r\n\t\tlet glyphs = this.glyphs;\r\n\t\tconst text = this.options.text;\r\n\t\tconst fontData = this.options.fontData;\r\n\t\tthis.setupSpaceGlyphs(fontData);\r\n\t\t// get lines\r\n\t\tconst lines = new TextLines(\r\n\t\t\ttext,\r\n\t\t\tthis.options.fontData,\r\n\t\t\tthis.options.width,\r\n\t\t\tthis.options.start,\r\n\t\t\tthis.options.mode,\r\n\t\t\tthis.options.letterSpacing\r\n\t\t).lines;\r\n\t\tlet minWidth = this.options.width || 0;\r\n\t\tlet maxLineWidth = lines.reduce(function(prev: any, line: any) {\r\n\t\t\treturn Math.max(prev, line.width, minWidth);\r\n\t\t}, 0);\r\n\r\n\t\t// clear glyphs\r\n\t\tglyphs = [];\r\n\r\n\t\t// the pen position\r\n\t\tlet x = 0;\r\n\t\tlet y = 0;\r\n\t\tconst lineHeight = number(this.options.lineHeight, fontData.common.lineHeight);\r\n\t\tconst baseline = fontData.common.base;\r\n\t\tconst descender = lineHeight - baseline;\r\n\t\tconst letterSpacing = this.options.letterSpacing || 0;\r\n\t\tconst height = lineHeight * lines.length - descender;\r\n\t\tconst align = this.getAlignType(this.options.align);\r\n\r\n\t\ty -= height;\r\n\r\n\t\tthis.width = maxLineWidth;\r\n\t\tthis.height = height;\r\n\t\tthis.descender = lineHeight - baseline;\r\n\t\tthis.baseline = baseline;\r\n\t\tthis.xHeight = getXHeight(fontData);\r\n\t\tthis.capHeight = getCapHeight(fontData);\r\n\t\tthis.lineHeight = lineHeight;\r\n\t\tthis.ascender = lineHeight - descender - this.xHeight;\r\n\r\n\t\tlet self = this;\r\n\t\tlines.forEach(function(line: any, lineIndex: any) {\r\n\t\t\tlet start = line.start;\r\n\t\t\tlet end = line.end;\r\n\t\t\tlet lineWidth = line.width;\r\n\t\t\tlet lastGlyph;\r\n\t\t\t// for each glyph in that line...\r\n\t\t\tfor (let i = start; i < end; i++) {\r\n\t\t\t\tlet id = text.charCodeAt(i);\r\n\t\t\t\tlet glyph = self.getGlyph(fontData, id);\r\n\r\n\t\t\t\tif (glyph) {\r\n\t\t\t\t\tif (lastGlyph) x += getKerning(fontData, lastGlyph.id, glyph.id);\r\n\r\n\t\t\t\t\tlet tx = x;\r\n\t\t\t\t\tif (align === ALIGN_CENTER) tx += (maxLineWidth - lineWidth) / 2;\r\n\t\t\t\t\telse if (align === ALIGN_RIGHT) tx += maxLineWidth - lineWidth;\r\n\r\n\t\t\t\t\tglyphs.push({\r\n\t\t\t\t\t\tposition: [tx, y],\r\n\t\t\t\t\t\tdata: glyph,\r\n\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\tline: lineIndex\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// move pen forward\r\n\t\t\t\t\tx += glyph.xadvance + letterSpacing;\r\n\t\t\t\t\tlastGlyph = glyph;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// move pen forward\r\n\t\t\ty += lineHeight;\r\n\t\t\tx = 0;\r\n\t\t});\r\n\r\n\t\tthis.linesTotal = lines.length;\r\n\t\tthis.glyphs = glyphs;\r\n\t}\r\n\r\n\tgetGlyph(font: any, id: any) {\r\n\t\tlet glyph = getGlyphById(font, id);\r\n\t\tif (glyph) return glyph;\r\n\t\telse if (id === TAB_ID) return this._fallbackTabGlyph;\r\n\t\telse if (id === SPACE_ID) return this._fallbackSpaceGlyph;\r\n\t\treturn null;\r\n\t}\r\n\r\n\tgetAlignType(align: string) {\r\n\t\tif (align === 'center') return ALIGN_CENTER;\r\n\t\telse if (align === 'right') return ALIGN_RIGHT;\r\n\t\treturn ALIGN_LEFT;\r\n\t}\r\n\r\n\tsetupSpaceGlyphs(fontData: any) {\r\n\t\tthis.fallbackSpaceGlyph = null;\r\n\t\tthis.fallbackTabGlyph = null;\r\n\r\n\t\tif (!fontData.chars || fontData.chars.length === 0) return;\r\n\r\n\t\t// try to get space glyph\r\n\t\t// then fall back to the 'm' or 'w' glyphs\r\n\t\t// then fall back to the first glyph available\r\n\t\tconst space =\r\n\t\t\tgetGlyphById(fontData, SPACE_ID) || this.getMGlyph(fontData) || fontData.chars[0];\r\n\r\n\t\tlet tabWidth = this.options.tabSize * space.xadvance;\r\n\t\tthis.fallbackSpaceGlyph = space;\r\n\t\tthis.fallbackTabGlyph = this.extendObject(space, {\r\n\t\t\tx: 0,\r\n\t\t\ty: 0,\r\n\t\t\txadvance: tabWidth,\r\n\t\t\tid: TAB_ID,\r\n\t\t\txoffset: 0,\r\n\t\t\tyoffset: 0,\r\n\t\t\twidth: 0,\r\n\t\t\theight: 0\r\n\t\t});\r\n\t}\r\n\r\n\textendObject(objectData: { [index: string]: any }, data: { [index: string]: any }) {\r\n\t\tlet obj: { [index: string]: any } = {};\r\n\t\tfor (let key in objectData) {\r\n\t\t\tobj[key] = objectData[key];\r\n\t\t}\r\n\r\n\t\tfor (let key in data) {\r\n\t\t\tobj[key] = data[key];\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tfindChar(objectValue: { [index: string]: any }, value: any) {\r\n\t\tfor (let key in objectValue) {\r\n\t\t\tif (objectValue[key].id === value) {\r\n\t\t\t\treturn key;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tgetMGlyph(fontData: any) {\r\n\t\tfor (let i = 0; i < M_WIDTHS.length; i++) {\r\n\t\t\tlet id = M_WIDTHS[i].charCodeAt(0);\r\n\t\t\tlet idx = this.findChar(fontData.chars, id);\r\n\t\t\tif (idx >= 0) return fontData.chars[idx];\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n}\r\n\r\nconst newline = /\\n/;\r\nconst newlineChar = '\\n';\r\nconst whitespace = /\\s/;\r\n\r\nexport class TextLines {\r\n\tprivate fontData: any;\r\n\tpublic lines: any;\r\n\tconstructor(\r\n\t\ttext: any,\r\n\t\tfontData: any,\r\n\t\twidth = Number.MAX_VALUE,\r\n\t\tstart = 0,\r\n\t\tmode = 'nowrap',\r\n\t\tletterSpacing = 0\r\n\t) {\r\n\t\t// if(mode === )\r\n\t\tlet end = text.length;\r\n\t\tthis.fontData = fontData;\r\n\t\tthis.greedy(text, start, end, width, mode);\r\n\t\t// this.measure(text, fontData, start, end, width,  );\r\n\t}\r\n\r\n\tgreedy(text: any, start: any, end: any, width: number, mode: any) {\r\n\t\t// A greedy word wrapper based on LibGDX algorithm\r\n\t\t// https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java\r\n\r\n\t\tlet lines = [];\r\n\r\n\t\tlet testWidth = width;\r\n\r\n\t\tif (mode === 'nowrap') testWidth = Number.MAX_VALUE;\r\n\r\n\t\twhile (start < end && start < text.length) {\r\n\t\t\t// get next newline position\r\n\r\n\t\t\tlet newLine = this.idxOf(text, newlineChar, start, end);\r\n\r\n\t\t\t// eat whitespace at start of line\r\n\t\t\twhile (start < newLine) {\r\n\t\t\t\tif (!this.isWhitespace(text.charAt(start))) break;\r\n\t\t\t\tstart++;\r\n\t\t\t}\r\n\r\n\t\t\t// determine visible # of glyphs for the available width\r\n\t\t\tlet measured = this.measure(text, this.fontData, start, newLine, testWidth);\r\n\r\n\t\t\tlet lineEnd = start + (measured.end - measured.start);\r\n\t\t\tlet nextStart = lineEnd + newlineChar.length;\r\n\r\n\t\t\t// if we had to cut the line before the next newline...\r\n\t\t\tif (lineEnd < newLine) {\r\n\t\t\t\t// find char to break on\r\n\t\t\t\twhile (lineEnd > start) {\r\n\t\t\t\t\tif (this.isWhitespace(text.charAt(lineEnd))) break;\r\n\t\t\t\t\tlineEnd--;\r\n\t\t\t\t}\r\n\t\t\t\tif (lineEnd === start) {\r\n\t\t\t\t\tif (nextStart > start + newlineChar.length) nextStart--;\r\n\t\t\t\t\tlineEnd = nextStart; // If no characters to break, show all.\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnextStart = lineEnd;\r\n\t\t\t\t\t// eat whitespace at end of line\r\n\t\t\t\t\twhile (lineEnd > start) {\r\n\t\t\t\t\t\tif (!this.isWhitespace(text.charAt(lineEnd - newlineChar.length))) break;\r\n\t\t\t\t\t\tlineEnd--;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (lineEnd >= start) {\r\n\t\t\t\tlet result = this.measure(text, this.fontData, start, lineEnd, testWidth);\r\n\t\t\t\tlines.push(result);\r\n\t\t\t}\r\n\r\n\t\t\tstart = nextStart;\r\n\t\t}\r\n\r\n\t\tthis.lines = lines;\r\n\t}\r\n\r\n\tidxOf(text: any, chr: any, start: number, end: number) {\r\n\t\tlet idx = text.indexOf(chr, start);\r\n\r\n\t\tif (idx === -1 || idx > end) return end;\r\n\t\treturn idx;\r\n\t}\r\n\r\n\tisWhitespace(chr: string) {\r\n\t\treturn whitespace.test(chr);\r\n\t}\r\n\r\n\tmeasure(text: any, fontData: any, start: any, end: any, width: any) {\r\n\t\treturn this.computeMetrics(text, fontData, start, end, width);\r\n\t}\r\n\r\n\tcomputeMetrics(text: any, font: any, start: any, end: any, width: any, letterSpacing = 0) {\r\n\t\tlet curPen = 0;\r\n\t\tlet curWidth = 0;\r\n\t\tlet count = 0;\r\n\t\tlet glyph;\r\n\t\tlet lastGlyph;\r\n\r\n\t\tif (!font.chars) {\r\n\t\t\treturn {\r\n\t\t\t\tstart: start,\r\n\t\t\t\tend: start,\r\n\t\t\t\twidth: 0\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tend = Math.min(text.length, end);\r\n\r\n\t\tfor (let i = start; i < end; i++) {\r\n\t\t\tlet id = text.charCodeAt(i);\r\n\t\t\tglyph = getGlyphById(font, id);\r\n\r\n\t\t\t// console.log(glyph);\r\n\t\t\tif (glyph) {\r\n\t\t\t\tlet kern = lastGlyph ? getKerning(font, lastGlyph.id, glyph.id) : 0;\r\n\t\t\t\tcurPen += kern;\r\n\r\n\t\t\t\tlet nextPen = curPen + glyph.xadvance + letterSpacing;\r\n\t\t\t\tlet nextWidth = curPen + glyph.width;\r\n\t\t\t\t// we've hit our limit; we can't move onto the next glyph\r\n\t\t\t\tif (nextWidth >= width || nextPen >= width) break;\r\n\r\n\t\t\t\t// otherwise continue along our line\r\n\t\t\t\tcurPen = nextPen;\r\n\t\t\t\tcurWidth = nextWidth;\r\n\t\t\t\tlastGlyph = glyph;\r\n\t\t\t}\r\n\t\t\tcount++;\r\n\t\t}\r\n\r\n\t\tif (lastGlyph) curWidth += lastGlyph.xoffset;\r\n\r\n\t\treturn {\r\n\t\t\tstart: start,\r\n\t\t\tend: start + count,\r\n\t\t\twidth: curWidth\r\n\t\t};\r\n\t}\r\n}\r\n\r\nfunction getKerning(font: any, lastId: any, nextId: any) {\r\n\tif (!font.kernings) return;\r\n\r\n\tlet kernings = font.kernings;\r\n\tlet firstId = kernings[lastId];\r\n\tif (firstId) {\r\n\t\tlet kerningSpace = firstId[nextId];\r\n\t\tif (kerningSpace) return kerningSpace;\r\n\t}\r\n\r\n\treturn 0;\r\n}\r\n\r\nfunction getXHeight(font: any) {\r\n\tfor (let i = 0; i < X_HEIGHTS.length; i++) {\r\n\t\tlet id = X_HEIGHTS[i].charCodeAt(0);\r\n\t\tlet idx = findChar(font.chars, id);\r\n\t\tif (idx >= 0) return font.chars[idx].height;\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\nfunction findChar(fontChars: any, value: any) {\r\n\tfor (let key in fontChars) {\r\n\t\tif (fontChars[key].id === value) {\r\n\t\t\treturn key;\r\n\t\t}\r\n\t}\r\n\treturn -1;\r\n}\r\n\r\nfunction getGlyphById(font: any, id: any) {\r\n\tif (!font.chars) return null;\r\n\r\n\tlet glyphIdx = findChar(font.chars, id);\r\n\r\n\treturn font.chars[glyphIdx];\r\n}\r\n\r\nfunction getCapHeight(font: any) {\r\n\tfor (let i = 0; i < CAP_HEIGHTS.length; i++) {\r\n\t\tlet id = CAP_HEIGHTS[i].charCodeAt(0);\r\n\t\tlet idx = findChar(font.chars, id);\r\n\t\tif (idx >= 0) return font.chars[idx].height;\r\n\t}\r\n\treturn 0;\r\n}\r\n","export class TextRendering {\r\n\tpublic vertices: Float32Array;\r\n\tpublic uvs: Float32Array;\r\n\tpublic indices: Uint16Array;\r\n\tconstructor(gl: WebGLRenderingContext, textLayout: any, bitmapImage: any) {\r\n\t\tconst vertices: number[] = [];\r\n\t\tconst uvs: number[] = [];\r\n\t\tconst indices: number[] = [];\r\n\r\n\t\tlet imageWidth = bitmapImage.width;\r\n\t\tlet imageHeight = bitmapImage.height;\r\n\r\n\t\ttextLayout.glyphs.forEach((glyph: any, index: any) => {\r\n\t\t\tlet bitmap = glyph.data;\r\n\t\t\tlet [xx, yy] = glyph.position;\r\n\r\n\t\t\tlet startX = xx + bitmap.xoffset - textLayout.width / 2;\r\n\t\t\tlet endX = startX + bitmap.width;\r\n\t\t\tlet startY = -1 * (yy + bitmap.yoffset + textLayout.height / 2);\r\n\t\t\tlet endY = startY - bitmap.height;\r\n\r\n\t\t\tlet startUVX = bitmap.x / imageWidth;\r\n\t\t\tlet endUVX = startUVX + bitmap.width / imageWidth;\r\n\t\t\tlet startUVY = 1 - bitmap.y / imageHeight;\r\n\t\t\tlet endUVY = 1 - (bitmap.y + bitmap.height) / imageHeight;\r\n\r\n\t\t\tvertices.push(startX, startY, endX, startY, endX, endY, startX, endY);\r\n\t\t\tuvs.push(startUVX, startUVY, endUVX, startUVY, endUVX, endUVY, startUVX, endUVY);\r\n\t\t\tlet lastIndex = 4 * index;\r\n\t\t\tindices.push(\r\n\t\t\t\t0 + lastIndex,\r\n\t\t\t\t2 + lastIndex,\r\n\t\t\t\t1 + lastIndex,\r\n\t\t\t\t0 + lastIndex,\r\n\t\t\t\t3 + lastIndex,\r\n\t\t\t\t2 + lastIndex\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\tthis.vertices = new Float32Array(vertices);\r\n\t\tthis.uvs = new Float32Array(uvs);\r\n\t\tthis.indices = new Uint16Array(indices);\r\n\t}\r\n}\r\n","import { createImageTexture } from '../utils/functions/gl-textures';\r\nimport { EMPTY_CANVAS_SIZE, EMPTY_CANVAS_COLOR, COLOR_REPEAT } from '../utils/common/constants';\r\n\r\nexport class TexturePools {\r\n\tprivate static instance: TexturePools;\r\n\tpublic textures: { [key: string]: WebGLTexture } = {};\r\n\tprivate gl!: WebGLRenderingContext;\r\n\tprivate constructor() {}\r\n\r\n\tpublic static GET_INSTANCE() {\r\n\t\tif (!TexturePools.instance) {\r\n\t\t\tTexturePools.instance = new TexturePools();\r\n\t\t\t// ... any one time initialization goes here ...\r\n\t\t}\r\n\r\n\t\treturn TexturePools.instance;\r\n\t}\r\n\r\n\tpublic static GET_TEXTURE(name: string) {\r\n\t\treturn TexturePools.instance.textures[name];\r\n\t}\r\n\r\n\tpublic setGL(gl: WebGLRenderingContext) {\r\n\t\tthis.gl = gl;\r\n\t\tthis.setImage('empty', this.createEmptyCanvas());\r\n\t}\r\n\r\n\tpublic setImage(name: string, element: HTMLImageElement | HTMLCanvasElement) {\r\n\t\tconst texture = createImageTexture(this.gl, element) as WebGLTexture;\r\n\t\tthis.textures[name] = texture;\r\n\t}\r\n\r\n\tprivate createEmptyCanvas() {\r\n\t\tconst canvas = document.createElement('canvas');\r\n\t\tcanvas.width = EMPTY_CANVAS_SIZE;\r\n\t\tcanvas.height = EMPTY_CANVAS_SIZE;\r\n\t\tconst ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n\t\tctx.fillStyle = '#ffffff';\r\n\t\tctx.fillRect(0, 0, EMPTY_CANVAS_SIZE, EMPTY_CANVAS_SIZE);\r\n\t\tctx.fillStyle = EMPTY_CANVAS_COLOR;\r\n\t\tlet cnt = 0;\r\n\t\tconst unitWidthSize = EMPTY_CANVAS_SIZE / COLOR_REPEAT;\r\n\t\tfor (let xx = 0; xx < COLOR_REPEAT; xx = xx + 1) {\r\n\t\t\tfor (let yy = 0; yy < COLOR_REPEAT; yy = yy + 1) {\r\n\t\t\t\tif (cnt % 2 === 0) {\r\n\t\t\t\t\tconst xpos = xx * unitWidthSize;\r\n\t\t\t\t\tconst ypos = yy * unitWidthSize;\r\n\t\t\t\t\tctx.fillRect(xpos, ypos, unitWidthSize, unitWidthSize);\r\n\t\t\t\t}\r\n\t\t\t\tcnt = cnt + 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn canvas;\r\n\t}\r\n}\r\n","import { createProgram } from '../utils/functions/gl-functions';\n\nimport {\n\tcreateEmptyTexture,\n\tcreateImageTexture,\n\tcreateCustomTypeImageTexture\n} from '../utils/functions/gl-textures';\nimport {\n\tRGB,\n\tLINEAR,\n\tCLAMP_TO_EDGE,\n\tUNIFORM_1F,\n\tUNIFORM_2F,\n\tUNIFORM_3F,\n\tUNIFORM_1I,\n\tUNIFORM_MAT_4F\n} from '../utils/common/constants';\nimport { createSuperSimpleplane } from '../utils/generate/generateSimpleGeometry';\n\nexport class SwapRenderer {\n\tprivate gl: WebGLRenderingContext;\n\n\tprivate textures: {\n\t\t[key: string]: WebGLTexture | null;\n\t} = {};\n\n\tprivate framebuffers: {\n\t\t[key: string]: WebGLFramebuffer | null;\n\t} = {};\n\n\tprivate programs: {\n\t\t[key: string]: {\n\t\t\tid: WebGLProgram;\n\t\t\tuniforms: { [key: string]: WebGLUniformLocation | null };\n\t\t};\n\t} = {};\n\n\tprivate positionVbos: {\n\t\t[key: string]: WebGLBuffer | null;\n\t} = {};\n\n\tconstructor(gl: WebGLRenderingContext) {\n\t\tthis.gl = gl;\n\t}\n\n\tpublic setSize(width: number, height: number) {\n\t\tthis.gl.viewport(0, 0, width, height);\n\t}\n\n\tpublic createProgram(programName: string, vertexShader: string, fragmentShader: string) {\n\t\tconst program = createProgram(this.gl, vertexShader, fragmentShader);\n\n\t\tthis.gl.useProgram(program);\n\n\t\tthis.programs[programName] = {\n\t\t\tid: program,\n\t\t\tuniforms: {}\n\t\t};\n\t}\n\n\tpublic initTexture(name: string, width: number, height: number, type: number) {\n\t\tconst texture = createEmptyTexture(\n\t\t\tthis.gl,\n\t\t\twidth,\n\t\t\theight,\n\t\t\tRGB,\n\t\t\tLINEAR,\n\t\t\tLINEAR,\n\t\t\tCLAMP_TO_EDGE,\n\t\t\tCLAMP_TO_EDGE,\n\t\t\ttype\n\t\t);\n\n\t\tthis.textures[name] = texture;\n\t}\n\n\tpublic initTextureWithImage(name: string, type: number, image: HTMLImageElement) {\n\t\tconst texture = createCustomTypeImageTexture(this.gl, image, this.gl.RGB, type, true);\n\n\t\tthis.textures[name] = texture;\n\t}\n\n\tpublic initFramebufferForTexture(textureName: string) {\n\t\tconst texture = this.textures[textureName];\n\t\tconst framebuffer = this.gl.createFramebuffer();\n\t\tthis.gl.bindFramebuffer(this.gl.FRAMEBUFFER, framebuffer);\n\t\tthis.gl.framebufferTexture2D(\n\t\t\tthis.gl.FRAMEBUFFER,\n\t\t\tthis.gl.COLOR_ATTACHMENT0,\n\t\t\tthis.gl.TEXTURE_2D,\n\t\t\ttexture,\n\t\t\t0\n\t\t);\n\n\t\tthis.framebuffers[textureName] = framebuffer;\n\t}\n\n\tpublic initDepthTexture(width: number, height: number) {\n\t\tconst depth = this.gl.createRenderbuffer();\n\t\tthis.gl.bindRenderbuffer(this.gl.RENDERBUFFER, depth);\n\t\tthis.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.DEPTH_COMPONENT16, width, height);\n\t}\n\n\tpublic setProgram(programName: string) {\n\t\tthis.gl.useProgram(this.programs[programName].id);\n\t}\n\n\tpublic use(programName: string) {\n\t\tthis.gl.useProgram(this.programs[programName].id);\n\t}\n\n\tpublic getProgram(programName: string) {\n\t\treturn this.programs[programName].id;\n\t}\n\n\tpublic createPositionVBO(name: string, scaleX: number = 1, scaleY: number = 1) {\n\t\tconst buffer = this.gl.createBuffer();\n\t\tthis.gl.bindBuffer(this.gl.ARRAY_BUFFER, buffer);\n\t\tthis.gl.bufferData(\n\t\t\tthis.gl.ARRAY_BUFFER,\n\t\t\tcreateSuperSimpleplane(scaleX, scaleY),\n\t\t\tthis.gl.STATIC_DRAW\n\t\t);\n\n\t\tthis.positionVbos[name] = buffer;\n\t}\n\n\tpublic usePositionVBO() {\n\t\tconst location = 0;\n\t\tthis.gl.enableVertexAttribArray(location);\n\t\tthis.gl.vertexAttribPointer(location, 2, this.gl.FLOAT, false, 0, 0);\n\t}\n\n\tpublic updateVBO(name: string) {\n\t\tconst buffer = this.positionVbos[name];\n\t\tthis.gl.bindBuffer(this.gl.ARRAY_BUFFER, buffer);\n\t\tthis.usePositionVBO();\n\t}\n\n\tpublic run(programName: string, inputNameArr: string[], outputName: string) {\n\t\tthis.use(programName);\n\t\tthis.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.framebuffers[outputName]);\n\t\tfor (let ii = 0; ii < inputNameArr.length; ii = ii + 1) {\n\t\t\tconst inputName = inputNameArr[ii];\n\t\t\tthis.gl.activeTexture(this.gl.TEXTURE0 + ii);\n\t\t\tthis.gl.bindTexture(this.gl.TEXTURE_2D, this.textures[inputName]);\n\t\t}\n\n\t\tthis.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4);\n\t}\n\n\tpublic swapTextures(texture1Name: string, texture2Name: string) {\n\t\tlet tempTex = this.textures[texture1Name];\n\t\tthis.textures[texture1Name] = this.textures[texture2Name];\n\t\tthis.textures[texture2Name] = tempTex;\n\n\t\tconst tempFBO = this.framebuffers[texture1Name];\n\t\tthis.framebuffers[texture1Name] = this.framebuffers[texture2Name];\n\t\tthis.framebuffers[texture2Name] = tempFBO;\n\t}\n\n\tpublic setUniform(\n\t\tprogramName: string,\n\t\tname: string,\n\t\tval: number | number[] | Float32List,\n\t\ttype: string\n\t) {\n\t\tlet uniforms = this.programs[programName].uniforms;\n\t\t// console.log(this.programs[programName].uniforms);\n\t\tlet location = uniforms[name];\n\t\tif (!location) {\n\t\t\tlocation = this.gl.getUniformLocation(this.programs[programName].id, name);\n\t\t\tuniforms[name] = location;\n\n\t\t\tif (!location) {\n\t\t\t\tconsole.warn({ programName, name });\n\t\t\t}\n\t\t}\n\n\t\tif (type === UNIFORM_1F) this.gl.uniform1f(location, val as number);\n\t\telse if (type === UNIFORM_2F) {\n\t\t\tval = val as number[];\n\t\t\tthis.gl.uniform2f(location, val[0], val[1]);\n\t\t} else if (type === UNIFORM_3F) {\n\t\t\tval = val as number[];\n\t\t\tthis.gl.uniform3f(location, val[0], val[1], val[2]);\n\t\t} else if (type === UNIFORM_1I) {\n\t\t\tthis.gl.uniform1i(location, val as number);\n\t\t} else if (type === UNIFORM_MAT_4F) {\n\t\t\tthis.gl.uniformMatrix4fv(location, false, val as Float32List);\n\t\t} else {\n\t\t\tconsole.warn('no uniform for type ' + type);\n\t\t}\n\t}\n\n\tpublic reset() {\n\t\tthis.programs = {};\n\t\tthis.framebuffers = {};\n\t\tthis.textures = {};\n\t\tthis.positionVbos = {};\n\t}\n}\n","import {\n\tcreateImageTexture,\n\tcreateEmptyTexture,\n\tupdateEmptyImageTexture\n} from '../utils/functions/gl-textures';\nexport class FBO {\n\tprivate gl: WebGLRenderingContext;\n\tprivate width: number;\n\tprivate height: number;\n\tprivate buffer: WebGLFramebuffer | null;\n\tprivate texture: WebGLTexture | null;\n\tprivate depth?: WebGLRenderbuffer | null;\n\n\tconstructor(\n\t\tgl: WebGLRenderingContext,\n\t\twidth: number,\n\t\theight: number,\n\t\ttexture?: WebGLTexture | null,\n\t\tisDepthNeed: boolean = false\n\t) {\n\t\tthis.gl = gl;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.texture =\n\t\t\ttexture === undefined || texture === null\n\t\t\t\t? createEmptyTexture(this.gl, width, height)\n\t\t\t\t: texture;\n\n\t\tthis.buffer = this.gl.createFramebuffer();\n\t\tthis.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.buffer);\n\t\tthis.bindTex();\n\n\t\tif (isDepthNeed) {\n\t\t\tthis.createDepth();\n\t\t\tthis.updateDepth();\n\t\t}\n\t}\n\n\tprivate bindTex() {\n\t\tthis.gl.framebufferTexture2D(\n\t\t\tthis.gl.FRAMEBUFFER,\n\t\t\tthis.gl.COLOR_ATTACHMENT0,\n\t\t\tthis.gl.TEXTURE_2D,\n\t\t\tthis.texture,\n\t\t\t0\n\t\t);\n\t}\n\n\tprivate createDepth() {\n\t\tthis.depth = this.gl.createRenderbuffer();\n\t}\n\n\tprivate updateDepth() {\n\t\tthis.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.depth as WebGLRenderbuffer);\n\t\tthis.gl.renderbufferStorage(\n\t\t\tthis.gl.RENDERBUFFER,\n\t\t\tthis.gl.DEPTH_COMPONENT16,\n\t\t\tthis.width,\n\t\t\tthis.height\n\t\t);\n\t\tthis.gl.framebufferRenderbuffer(\n\t\t\tthis.gl.FRAMEBUFFER,\n\t\t\tthis.gl.DEPTH_ATTACHMENT,\n\t\t\tthis.gl.RENDERBUFFER,\n\t\t\tthis.depth as WebGLRenderbuffer\n\t\t);\n\t}\n\n\tpublic bind() {\n\t\tthis.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.buffer);\n\t}\n\n\tpublic unbind() {\n\t\tthis.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null);\n\t}\n\n\tpublic resize(width: number, height: number, texture?: WebGLTexture) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t\tthis.bind();\n\n\t\tupdateEmptyImageTexture(this.gl, this.texture as WebGLTexture, width, height);\n\t\tthis.bindTex();\n\t\tthis.updateDepth();\n\t}\n\n\tpublic getTexture() {\n\t\treturn this.texture;\n\t}\n}\n"],"names":["glMatrix.ARRAY_TYPE","create","glMatrix.EPSILON","vec3.fromValues","vec3.create","vec3.transformMat4","mat3.create","mat3.fromMat4","vec3.transformMat3","vec3.normalize","vec3.subtract","vec3.cross","mat4.create","mat4.lookAt","mat4.invert","tslib_1.__extends","mat4.perspective","mat4.ortho"],"mappings":"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AAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACtD,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACtD,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACtD,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACtD,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACtD,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACtD,EAAE,OAAO,GAAG,CAAC;EACb,CAAC;AACD,EAygCA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AAEA,EAAO,SAAS,WAAW,CAAC,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE;EAC1D,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC;EAClC,MAAM,EAAE,CAAC;EACT,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC;EACtB,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACb,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACb,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACb,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACb,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACb,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACb,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACb,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACb,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACb,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;EACf,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;EACd,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;EACd,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;;EAEd,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,KAAK,QAAQ,EAAE;EACvC,IAAI,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC;EAC1B,IAAI,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;EAChC,IAAI,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC;EAClC,GAAG,MAAM;EACT,IAAI,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;EACjB,IAAI,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;EACxB,GAAG;;EAEH,EAAE,OAAO,GAAG,CAAC;EACb,CAAC;AACD,EAqCA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AAEA,EAAO,SAAS,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE;EAChE,EAAE,IAAI,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC;EAC9B,EAAE,IAAI,EAAE,GAAG,CAAC,IAAI,MAAM,GAAG,GAAG,CAAC,CAAC;EAC9B,EAAE,IAAI,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC;EAC5B,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;EACnB,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACb,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACb,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACb,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACb,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;EACnB,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACb,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACb,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACb,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACb,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;EACnB,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;EACd,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,GAAG,KAAK,IAAI,EAAE,CAAC;EAChC,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,MAAM,IAAI,EAAE,CAAC;EAChC,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;EAC9B,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;EACd,EAAE,OAAO,GAAG,CAAC;EACb,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AAEA,EAAO,SAAS,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,EAAE,EAAE;EAC7C,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;EAC9C,EAAE,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;EACpB,EAAE,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;EACpB,EAAE,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;EACpB,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;EAClB,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;EAClB,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;EAClB,EAAE,IAAI,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;EAC1B,EAAE,IAAI,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;EAC1B,EAAE,IAAI,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;;EAE1B,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,OAAO,CAAC,GAAGE,OAAgB,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,OAAO,CAAC,GAAGA,OAAgB,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,OAAO,CAAC,GAAGA,OAAgB,EAAE;EACjJ,IAAI,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC;EACzB,GAAG;;EAEH,EAAE,EAAE,GAAG,IAAI,GAAG,OAAO,CAAC;EACtB,EAAE,EAAE,GAAG,IAAI,GAAG,OAAO,CAAC;EACtB,EAAE,EAAE,GAAG,IAAI,GAAG,OAAO,CAAC;EACtB,EAAE,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;EACnD,EAAE,EAAE,IAAI,GAAG,CAAC;EACZ,EAAE,EAAE,IAAI,GAAG,CAAC;EACZ,EAAE,EAAE,IAAI,GAAG,CAAC;EACZ,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC;EAC3B,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC;EAC3B,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC;EAC3B,EAAE,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;;EAE/C,EAAE,IAAI,CAAC,GAAG,EAAE;EACZ,IAAI,EAAE,GAAG,CAAC,CAAC;EACX,IAAI,EAAE,GAAG,CAAC,CAAC;EACX,IAAI,EAAE,GAAG,CAAC,CAAC;EACX,GAAG,MAAM;EACT,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;EAClB,IAAI,EAAE,IAAI,GAAG,CAAC;EACd,IAAI,EAAE,IAAI,GAAG,CAAC;EACd,IAAI,EAAE,IAAI,GAAG,CAAC;EACd,GAAG;;EAEH,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;EACzB,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;EACzB,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;EACzB,EAAE,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;;EAE/C,EAAE,IAAI,CAAC,GAAG,EAAE;EACZ,IAAI,EAAE,GAAG,CAAC,CAAC;EACX,IAAI,EAAE,GAAG,CAAC,CAAC;EACX,IAAI,EAAE,GAAG,CAAC,CAAC;EACX,GAAG,MAAM;EACT,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;EAClB,IAAI,EAAE,IAAI,GAAG,CAAC;EACd,IAAI,EAAE,IAAI,GAAG,CAAC;EACd,IAAI,EAAE,IAAI,GAAG,CAAC;EACd,GAAG;;EAEH,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;EACd,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;EACd,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;EACd,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACb,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;EACd,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;EACd,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;EACd,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACb,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;EACd,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;EACd,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;EACf,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;EACd,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,GAAG,IAAI,GAAG,EAAE,GAAG,IAAI,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;EACjD,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,GAAG,IAAI,GAAG,EAAE,GAAG,IAAI,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;EACjD,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,GAAG,IAAI,GAAG,EAAE,GAAG,IAAI,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;EACjD,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;EACd,EAAE,OAAO,GAAG,CAAC;EACb,CAAC;;ECrgDD;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;AAEA,EAAO,SAASD,QAAM,GAAG;EACzB,EAAE,IAAI,GAAG,GAAG,IAAID,UAAmB,CAAC,CAAC,CAAC,CAAC;;EAEvC,EAAE,IAAIA,UAAmB,IAAI,YAAY,EAAE;EAC3C,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACf,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACf,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACf,GAAG;;EAEH,EAAE,OAAO,GAAG,CAAC;EACb,CAAC;AACD,EA2BA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AAEA,EAAO,SAAS,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;EACpC,EAAE,IAAI,GAAG,GAAG,IAAIA,UAAmB,CAAC,CAAC,CAAC,CAAC;EACvC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACb,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACb,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACb,EAAE,OAAO,GAAG,CAAC;EACb,CAAC;AACD,EA6CA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AAEA,EAAO,SAAS,QAAQ,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE;EACpC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACvB,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACvB,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACvB,EAAE,OAAO,GAAG,CAAC;EACb,CAAC;AACD,EA0MA;EACA;EACA;EACA;EACA;EACA;EACA;;AAEA,EAAO,SAAS,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE;EAClC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACf,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACf,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACf,EAAE,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;;EAElC,EAAE,IAAI,GAAG,GAAG,CAAC,EAAE;EACf;EACA,IAAI,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;EAC7B,GAAG;;EAEH,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;EACtB,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;EACtB,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;EACtB,EAAE,OAAO,GAAG,CAAC;EACb,CAAC;AACD,EAWA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AAEA,EAAO,SAAS,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE;EACjC,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;EACf,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;EACf,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAChB,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;EACf,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;EACf,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAChB,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;EAC7B,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;EAC7B,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;EAC7B,EAAE,OAAO,GAAG,CAAC;EACb,CAAC;AACD,EAqFA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AAEA,EAAO,SAAS,aAAa,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE;EACzC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACd,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACd,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACf,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EAClD,EAAE,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC;EACf,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;EACxD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;EACxD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;EACzD,EAAE,OAAO,GAAG,CAAC;EACb,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AAEA,EAAO,SAAS,aAAa,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE;EACzC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACd,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACd,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACf,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1C,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1C,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1C,EAAE,OAAO,GAAG,CAAC;EACb,CAAC;AACD,EA4OA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AAEA,EAAO,IAAI,OAAO,GAAG,YAAY;EACjC,EAAE,IAAI,GAAG,GAAGC,QAAM,EAAE,CAAC;EACrB,EAAE,OAAO,UAAU,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,GAAG,EAAE;EACtD,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC;;EAEb,IAAI,IAAI,CAAC,MAAM,EAAE;EACjB,MAAM,MAAM,GAAG,CAAC,CAAC;EACjB,KAAK;;EAEL,IAAI,IAAI,CAAC,MAAM,EAAE;EACjB,MAAM,MAAM,GAAG,CAAC,CAAC;EACjB,KAAK;;EAEL,IAAI,IAAI,KAAK,EAAE;EACf,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,MAAM,GAAG,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;EACtD,KAAK,MAAM;EACX,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;EACnB,KAAK;;EAEL,IAAI,KAAK,CAAC,GAAG,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,MAAM,EAAE;EACzC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACpB,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EACxB,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EACxB,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;EACxB,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;EACpB,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;EACxB,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;EACxB,KAAK;;EAEL,IAAI,OAAO,CAAC,CAAC;EACb,GAAG,CAAC;EACJ,CAAC,EAAE;;MAAC,KC5wBY,mBAAmB,CAClC,EAAyB,EACzB,OAAqB,EACrB,GAAa;MAEb,IAAM,SAAS,GAAmB,EAAE,CAAC;;MAGrC,KAAmB,UAAG,EAAH,WAAG,EAAH,iBAAG,EAAH,IAAG,EAAE;UAAnB,IAAM,MAAI,YAAA;UACd,IAAM,eAAe,GAAyB,EAAE,CAAC,kBAAkB,CAClE,OAAO,EACP,MAAI,CACoB,CAAC;UAC1B,SAAS,CAAC,MAAI,CAAC,GAAG,eAAe,CAAC;OAClC;MAED,OAAO,SAAS,CAAC;EAClB,CAAC;EAED;;;;AAIA,WAAgB,cAAc,CAAC,IAAY;MAC1C,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;MAE/B,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE;UAChD,KAAK,CAAC,EAAE,CAAC,GAAM,EAAE,GAAG,CAAC,UAAK,KAAK,CAAC,EAAE,CAAG,CAAC;OACtC;MAED,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EACzB,CAAC;EAED;;;;;;AAMA,WAAgB,eAAe,CAAC,EAAyB,EAAE,MAAc,EAAE,YAAoB;MAC9F,IAAM,MAAM,GAAG,EAAE,CAAC,YAAY,CAAC,MAAM,CAAgB,CAAC;MAEtD,EAAE,CAAC,YAAY,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;MACtC,EAAE,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;MAEzB,IAAI,EAAE,CAAC,kBAAkB,CAAC,MAAM,EAAE,EAAE,CAAC,cAAc,CAAC,EAAE;UACrD,OAAO,MAAM,CAAC;OACd;WAAM;UACN,OAAO,CAAC,IAAI,CAAC,0CAA0C,CAAC,CAAC;UAEzD,IAAI,EAAE,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE;cACvC,OAAO,CAAC,IAAI,CACX,sCAAsC,EACtC,MAAM,KAAK,EAAE,CAAC,aAAa,GAAG,QAAQ,GAAG,UAAU,EACnD,EAAE,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAC3B,cAAc,CAAC,YAAY,CAAC,CAC5B,CAAC;cAEF,OAAO,SAAS,CAAC;WACjB;OACD;EACF,CAAC;EAED;;;;;;AAMA,WAAgB,aAAa,CAC5B,EAAyB,EACzB,eAAuB,EACvB,iBAAyB;MAEzB,IAAM,OAAO,GAAG,EAAE,CAAC,aAAa,EAAkB,CAAC;MAEnD,IAAM,YAAY,GAAG,eAAe,CAAC,EAAE,EAAE,EAAE,CAAC,aAAa,EAAE,eAAe,CAAgB,CAAC;MAC3F,IAAM,cAAc,GAAG,eAAe,CACrC,EAAE,EACF,EAAE,CAAC,eAAe,EAClB,iBAAiB,CACF,CAAC;MAEjB,EAAE,CAAC,YAAY,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;MACvC,EAAE,CAAC,YAAY,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;MACzC,EAAE,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;MAExB,IAAI;UACH,IAAM,OAAO,GAAG,EAAE,CAAC,mBAAmB,CAAC,OAAO,EAAE,EAAE,CAAC,WAAW,CAAC,CAAC;UAChE,IAAI,CAAC,OAAO,EAAE;cACb,MAAM,EAAE,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;WACpC;OACD;MAAC,OAAO,KAAK,EAAE;UACf,OAAO,CAAC,IAAI,CAAC,mBAAiB,KAAO,CAAC,CAAC;OACvC;MAED,OAAO,OAAO,CAAC;EAChB,CAAC;EAED;;;;;;;;;;;AAWA,WAAgB,wBAAwB,CACvC,EAAyB,EACzB,OAAqB,EACrB,IAAkB,EAClB,GAAW;MAEX,IAAM,MAAM,GAAG,EAAE,CAAC,YAAY,EAAE,CAAC;MACjC,IAAM,QAAQ,GAAG,EAAE,CAAC,iBAAiB,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;MAEpD,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;MACvC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,IAAI,EAAE,EAAE,CAAC,WAAW,CAAC,CAAC;MAErD,OAAO,EAAE,MAAM,QAAA,EAAE,QAAQ,UAAA,EAAE,CAAC;EAC7B,CAAC;EAED;;;;;;AAMA,WAAgB,YAAY,CAAC,EAAyB,EAAE,IAAkB;MACzE,IAAM,MAAM,GAAG,EAAE,CAAC,YAAY,EAAE,CAAC;MAEjC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;MACvC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,IAAI,EAAE,EAAE,CAAC,WAAW,CAAC,CAAC;MAErD,OAAO,MAAM,CAAC;EACf,CAAC;EAED;;;;;;;;AAQA,WAAgB,iBAAiB,CAChC,EAAyB,EACzB,MAAmB,EACnB,IAAkB,EAClB,MAAsB;MAAtB,uBAAA,EAAA,aAAsB;MAEtB,IAAI,MAAM,EAAE;UACX,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;OACvC;MACD,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,IAAI,EAAE,EAAE,CAAC,WAAW,CAAC,CAAC;EACtD,CAAC;EAED;;;;;;;AAOA,WAAgB,WAAW,CAAC,EAAyB,EAAE,OAAkC;MACxF,IAAM,MAAM,GAAG,EAAE,CAAC,YAAY,EAAE,CAAC;MACjC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,oBAAoB,EAAE,MAAM,CAAC,CAAC;MAC/C,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,oBAAoB,EAAE,OAAO,EAAE,EAAE,CAAC,WAAW,CAAC,CAAC;MAEhE,IAAM,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC;MAE3B,OAAO,EAAE,GAAG,KAAA,EAAE,MAAM,QAAA,EAAE,CAAC;EACxB,CAAC;EAED;;;;;;;;;;AAUA,WAAgB,UAAU,CACzB,EAAyB,EACzB,MAAmB,EACnB,QAAoB,EACpB,IAAgB,EAChB,IAAoB,EACpB,UAA2B,EAC3B,MAAkB,EAClB,MAAkB,EAClB,MAAsB;MANtB,yBAAA,EAAA,YAAoB;MACpB,qBAAA,EAAA,QAAgB;MAChB,qBAAA,EAAA,YAAoB;MACpB,2BAAA,EAAA,kBAA2B;MAC3B,uBAAA,EAAA,UAAkB;MAClB,uBAAA,EAAA,UAAkB;MAClB,uBAAA,EAAA,aAAsB;MAEtB,IAAI,MAAM,EAAE;UACX,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;OACvC;MACD,EAAE,CAAC,mBAAmB,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;MACzE,EAAE,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;EACtC,CAAC;AAED,WAAgB,qBAAqB,CAAC,QAAkB,EAAE,OAAiB;MAC1E,IAAM,KAAK,GAAyB,EAAE,CAAC;MAEvC,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,OAAO,CAAC,MAAM,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE;UAClD,IAAI,MAAM,GAAG,OAAO,CAAC,EAAE,CAAC,CAAC;UACzB,IAAI,MAAM,GAAG,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;UAC7B,IAAI,MAAM,GAAG,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;UAE7B,KAAK,CAAC,IAAI,CAAC;cACVE,UAAe,CACd,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC,EACpB,QAAQ,CAAC,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC,EACxB,QAAQ,CAAC,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC,CACxB;cACDA,UAAe,CACd,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC,EACpB,QAAQ,CAAC,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC,EACxB,QAAQ,CAAC,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC,CACxB;cACDA,UAAe,CACd,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC,EACpB,QAAQ,CAAC,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC,EACxB,QAAQ,CAAC,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC,CACxB;WACD,CAAC,CAAC;OACH;MAED,OAAO,KAAK,CAAC;EACd,CAAC;AAED,WAAgB,SAAS,CACxB,KAAW,EACX,iBAAuB,EACvB,uBAA6B,EAC7B,KAAiB;MAAjB,sBAAA,EAAA,SAAiB;MAEjB,IAAM,SAAS,GAAGA,UAAe,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;MAC7D,IAAM,WAAW,GAAGC,QAAW,EAAE,CAAC;MAClC,IAAM,UAAU,GAAGA,QAAW,EAAE,CAAC;MAEjCC,aAAkB,CAAC,WAAW,EAAE,SAAS,EAAE,uBAAuB,CAAC,CAAC;MACpEA,aAAkB,CAAC,UAAU,EAAE,WAAW,EAAE,iBAAiB,CAAC,CAAC;MAE/D,OAAO,UAAU,CAAC;EACnB,CAAC;AAED,WAAgB,4BAA4B,CAAC,EAAyB,EAAE,OAAqB;MAC5F,IAAM,WAAW,GAAG,EAAE,CAAC,iBAAiB,EAAE,CAAC;MAC3C,EAAE,CAAC,eAAe,CAAC,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;MAChD,EAAE,CAAC,oBAAoB,CAAC,EAAE,CAAC,WAAW,EAAE,EAAE,CAAC,iBAAiB,EAAE,EAAE,CAAC,UAAU,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;MAEzF,OAAO,WAAW,CAAC;EACpB,CAAC;AAED,WAAgB,wBAAwB,CAAC,EAAyB,EAAE,KAAa,EAAE,MAAc;MAChG,IAAM,KAAK,GAAG,EAAE,CAAC,kBAAkB,EAAE,CAAC;MACtC,EAAE,CAAC,gBAAgB,CAAC,EAAE,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;MAC5C,EAAE,CAAC,mBAAmB,CAAC,EAAE,CAAC,YAAY,EAAE,EAAE,CAAC,iBAAiB,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;MAE7E,OAAO,KAAK,CAAC;EACd,CAAC;AAED,WAAgB,UAAU,CAAC,OAAe,EAAE,QAAuB;MAClE,IAAI,QAAQ,KAAK,IAAI,EAAE;UACtB,OAAO,OAAO,CAAC;OACf;MAED,OAAO,QAAQ,GAAG,OAAO,CAAC;EAC3B,CAAC;;ECvRD;;;;;;;;;;;;AAYA,WAAgB,kBAAkB,CACjC,EAAyB,EACzB,YAAoB,EACpB,aAAqB,EACrB,MAAoB,EACpB,SAA0B,EAC1B,SAA0B,EAC1B,KAA6B,EAC7B,KAA6B,EAC7B,IAA4B;MAL5B,uBAAA,EAAA,YAAoB;MACpB,0BAAA,EAAA,kBAA0B;MAC1B,0BAAA,EAAA,kBAA0B;MAC1B,sBAAA,EAAA,qBAA6B;MAC7B,sBAAA,EAAA,qBAA6B;MAC7B,qBAAA,EAAA,oBAA4B;MAE5B,IAAM,OAAO,GAAG,EAAE,CAAC,aAAa,EAAkB,CAAC;MACnD,uBAAuB,CACtB,EAAE,EACF,OAAO,EACP,YAAY,EACZ,aAAa,EACb,MAAM,EACN,SAAS,EACT,SAAS,EACT,KAAK,EACL,KAAK,EACL,IAAI,CACJ,CAAC;MAEF,OAAO,OAAO,CAAC;EAChB,CAAC;AAED,WAAgB,kBAAkB,CACjC,EAAyB,EACzB,WAAiD,EACjD,MAAoB,EACpB,MAAuB,EACvB,QAAyB;MAFzB,uBAAA,EAAA,YAAoB;MACpB,uBAAA,EAAA,cAAuB;MACvB,yBAAA,EAAA,gBAAyB;MAEzB,OAAO,4BAA4B,CAClC,EAAE,EACF,WAAW,EACX,MAAM,EACN,EAAE,CAAC,aAAa,EAChB,MAAM,EACN,QAAQ,CACR,CAAC;EACH,CAAC;AAED,WAAgB,4BAA4B,CAC3C,EAAyB,EACzB,WAAiD,EACjD,MAAoB,EACpB,IAAY,EACZ,MAAuB,EACvB,QAAyB;MAHzB,uBAAA,EAAA,YAAoB;MAEpB,uBAAA,EAAA,cAAuB;MACvB,yBAAA,EAAA,gBAAyB;MAEzB,IAAM,OAAO,GAAG,EAAE,CAAC,aAAa,EAAE,CAAC;MACnC,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;MAEvC,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,mBAAmB,EAAE,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;MACvD,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;MAEnE,IAAI,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,UAAU,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,QAAQ,EAAE;;UAEhF,EAAE,CAAC,cAAc,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;OACjC;WAAM;;;UAGN,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,cAAc,EAAE,EAAE,CAAC,aAAa,CAAC,CAAC;UACrE,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,cAAc,EAAE,EAAE,CAAC,aAAa,CAAC,CAAC;UACrE,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,kBAAkB,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC;OAClE;MAED,OAAO,OAAO,CAAC;EAChB,CAAC;EAED,SAAS,UAAU,CAAC,KAAa;MAChC,OAAO,CAAC,KAAK,IAAI,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC;EACpC,CAAC;EAED;;;;;;;AAOA,WAAgB,kBAAkB,CACjC,EAAyB,EACzB,OAAqB,EACrB,KAAuB,EACvB,MAAoB;MAApB,uBAAA,EAAA,YAAoB;MAEpB,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;MACvC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;MAEzE,IAAI,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;;UAExD,EAAE,CAAC,cAAc,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;OACjC;WAAM;;;UAGN,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,cAAc,EAAE,EAAE,CAAC,aAAa,CAAC,CAAC;UACrE,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,cAAc,EAAE,EAAE,CAAC,aAAa,CAAC,CAAC;UACrE,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,kBAAkB,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC;OAClE;EACF,CAAC;AAED,WAAgB,uBAAuB,CACtC,EAAyB,EACzB,OAAqB,EACrB,YAAoB,EACpB,aAAqB,EACrB,MAAoB,EACpB,SAA0B,EAC1B,SAA0B,EAC1B,KAA6B,EAC7B,KAA6B,EAC7B,IAA4B;MAL5B,uBAAA,EAAA,YAAoB;MACpB,0BAAA,EAAA,kBAA0B;MAC1B,0BAAA,EAAA,kBAA0B;MAC1B,sBAAA,EAAA,qBAA6B;MAC7B,sBAAA,EAAA,qBAA6B;MAC7B,qBAAA,EAAA,oBAA4B;MAE5B,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;;MAGvC,IAAM,KAAK,GAAG,CAAC,CAAC;;MAIhB,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,aAAa,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;;MAGhG,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,kBAAkB,EAAE,SAAS,CAAC,CAAC;MAClE,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,kBAAkB,EAAE,SAAS,CAAC,CAAC;MAClE,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;MAC1D,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;MAE1D,OAAO,OAAO,CAAC;EAChB,CAAC;EAED;;;;;;;AAOA,WAAgB,aAAa,CAC5B,EAAyB,EACzB,OAAqB,EACrB,eAAqC,EACrC,UAAsB;MAAtB,2BAAA,EAAA,cAAsB;MAEtB,IAAM,gBAAgB,GAAG,EAAE,CAAC,QAAQ,GAAG,UAAU,CAAC;MAClD,EAAE,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;MACnC,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;MACvC,EAAE,CAAC,SAAS,CAAC,eAAe,EAAE,UAAU,CAAC,CAAC;EAC3C,CAAC;;ECnKD;;;;;AAKA,WAAgB,WAAW,CAAC,GAAW,EAAE,QAAkB;MAC1D,IAAM,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;MACjC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;MAE3B,GAAG,CAAC,kBAAkB,GAAG;UACxB,IAAI,GAAG,CAAC,UAAU,KAAK,CAAC,EAAE;cACzB,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE;kBACvB,IAAM,IAAI,GAAW,GAAG,CAAC,YAAY,CAAC;kBACtC,IAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;kBAClC,QAAQ,CAAC,QAAQ,CAAC,CAAC;;eAEnB,AAEA;WACD,AAEA;OACD,CAAC;MAEF,GAAG,CAAC,IAAI,EAAE,CAAC;EACZ,CAAC;EAED;;;;AAIA,WAAgB,QAAQ,CAAC,QAAgB,EAAE,QAAkB;MAC5D,IAAM,KAAK,GAAqB,IAAI,KAAK,EAAE,CAAC;MAC5C,KAAK,CAAC,MAAM,GAAG;UACd,QAAQ,CAAC,KAAK,CAAC,CAAC;OAChB,CAAC;MACF,KAAK,CAAC,OAAO,GAAG;UACf,OAAO,CAAC,IAAI,CAAC,WAAS,QAAQ,eAAY,CAAC,CAAC;OAC5C,CAAC;MAEF,KAAK,CAAC,GAAG,GAAG,QAAQ,CAAC;EACtB,CAAC;EAED;;;;;;;;AAQA,WAAgB,SAAS,CAAC,QAAgB,EAAE,QAAkB;MAC7D,IAAI,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;MAC/B,GAAG,CAAC,YAAY,GAAG,aAAa,CAAC;MACjC,GAAG,CAAC,kBAAkB,GAAG;UACxB,IAAI,GAAG,CAAC,UAAU,KAAK,CAAC,EAAE;cACzB,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;kBAC3C,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;eACvB;mBAAM;kBACN,OAAO,CAAC,KAAK,CAAC,iBAAiB,GAAG,QAAQ,GAAG,KAAK,GAAG,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC;eACvE;WACD;OACD,CAAC;MACF,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;MAChC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EAChB,CAAC;;WCpEe,SAAS,CACxB,MAAkB,EAClB,aAA0B,EAC1B,cAA2B;MAF3B,uBAAA,EAAA,UAAkB;MAClB,8BAAA,EAAA,kBAA0B;MAC1B,+BAAA,EAAA,mBAA2B;MAE3B,IAAM,QAAQ,GAAG,EAAE,CAAC;MACpB,IAAM,QAAQ,GAAG,EAAE,CAAC;MACpB,IAAM,OAAO,GAAG,EAAE,CAAC;MACnB,IAAM,OAAO,GAAG,EAAE,CAAC;MAEnB,KAAK,IAAI,SAAS,GAAG,CAAC,EAAE,SAAS,IAAI,aAAa,EAAE,SAAS,GAAG,SAAS,GAAG,CAAC,EAAE;UAC9E,IAAM,KAAK,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,IAAI,aAAa,CAAC;UACpD,IAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;UACjC,IAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;UAEjC,KAAK,IAAI,UAAU,GAAG,CAAC,EAAE,UAAU,IAAI,cAAc,EAAE,UAAU,GAAG,UAAU,GAAG,CAAC,EAAE;cACnF,IAAM,GAAG,GAAG,CAAC,UAAU,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,IAAI,cAAc,CAAC;cACxD,IAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;cAC7B,IAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;cAE7B,IAAM,CAAC,GAAG,MAAM,GAAG,QAAQ,CAAC;cAC5B,IAAM,CAAC,GAAG,QAAQ,CAAC;cACnB,IAAM,CAAC,GAAG,MAAM,GAAG,QAAQ,CAAC;cAC5B,IAAM,CAAC,GAAG,CAAC,GAAG,UAAU,GAAG,cAAc,CAAC;cAC1C,IAAM,CAAC,GAAG,CAAC,GAAG,SAAS,GAAG,aAAa,CAAC;cAExC,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;cACtB,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;cACpB,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,CAAC,CAAC;WAClD;OACD;MAED,KAAK,IAAI,SAAS,GAAG,CAAC,EAAE,SAAS,GAAG,aAAa,EAAE,SAAS,GAAG,SAAS,GAAG,CAAC,EAAE;UAC7E,KAAK,IAAI,UAAU,GAAG,CAAC,EAAE,UAAU,GAAG,cAAc,EAAE,UAAU,GAAG,UAAU,GAAG,CAAC,EAAE;cAClF,IAAI,KAAK,GAAG,SAAS,IAAI,cAAc,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC;cAC1D,IAAI,MAAM,GAAG,KAAK,GAAG,cAAc,GAAG,CAAC,CAAC;cACxC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,MAAM,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;WACtE;OACD;MAED,OAAO;UACN,QAAQ,EAAE,QAAQ;UAClB,GAAG,EAAE,QAAQ;UACb,OAAO,EAAE,OAAO;UAChB,OAAO,EAAE,OAAO;OAChB,CAAC;EACH,CAAC;AAED,WAAgB,QAAQ,CACvB,KAAa,EACb,MAAc,EACd,YAAoB,EACpB,aAAqB;MAErB,IAAI,QAAQ,GAAG,EAAE,CAAC;MAClB,IAAI,GAAG,GAAG,EAAE,CAAC;MACb,IAAI,KAAK,GAAG,CAAC,GAAG,YAAY,CAAC;MAC7B,IAAI,KAAK,GAAG,CAAC,GAAG,aAAa,CAAC;;MAG9B,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,IAAI,aAAa,EAAE,EAAE,EAAE,EAAE;UAC3C,IAAI,IAAI,GAAG,CAAC,CAAC,GAAG,GAAG,KAAK,GAAG,EAAE,IAAI,MAAM,CAAC;UAExC,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,IAAI,YAAY,EAAE,EAAE,EAAE,EAAE;cAC1C,IAAI,IAAI,GAAG,CAAC,CAAC,GAAG,GAAG,KAAK,GAAG,EAAE,IAAI,KAAK,CAAC;cACvC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;cACpB,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;cACpB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,YAAY,CAAC,CAAC;cAC5B,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,aAAa,CAAC,CAAC;WAC7B;OACD;MAED,IAAI,OAAO,GAAG,EAAE,CAAC;MAEjB,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,aAAa,EAAE,EAAE,EAAE,EAAE;UAC1C,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,YAAY,EAAE,EAAE,EAAE,EAAE;cACzC,IAAI,WAAW,GAAG,EAAE,IAAI,YAAY,GAAG,CAAC,CAAC,CAAC;cAC1C,IAAI,eAAe,GAAG,CAAC,EAAE,GAAG,CAAC,KAAK,YAAY,GAAG,CAAC,CAAC,CAAC;cAEpD,OAAO,CAAC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,CAAC;cAC/B,OAAO,CAAC,IAAI,CAAC,WAAW,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;cACnC,OAAO,CAAC,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC,CAAC;cAEnC,OAAO,CAAC,IAAI,CAAC,WAAW,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;cACnC,OAAO,CAAC,IAAI,CAAC,eAAe,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;cACvC,OAAO,CAAC,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC,CAAC;WACnC;OACD;MAED,OAAO;UACN,QAAQ,EAAE,QAAQ;UAClB,GAAG,EAAE,GAAG;UACR,OAAO,EAAE,OAAO;OAChB,CAAC;EACH,CAAC;AAED,WAAgB,aAAa,CAC5B,UAAyF;MAEzF,IAAM,QAAQ,GAAG,EAAE,CAAC;MACpB,IAAM,OAAO,GAAG,EAAE,CAAC;MACnB,IAAM,GAAG,GAAG,EAAE,CAAC;MACf,IAAM,OAAO,GAAG,EAAE,CAAC;MAEnB,IAAI,YAAY,GAAG,CAAC,CAAC;MAErB,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,UAAU,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE;UAC9C,IAAI,QAAQ,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC;UAE9B,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;cAChC,KAAK,IAAI,IAAE,GAAG,CAAC,EAAE,IAAE,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,IAAE,EAAE,EAAE;kBACpD,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAE,CAAC,GAAG,YAAY,GAAG,CAAC,CAAC,CAAC;eACtD;WACD;UAED,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;cACjC,KAAK,IAAI,IAAE,GAAG,CAAC,EAAE,IAAE,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAE,EAAE,EAAE;kBACrD,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAE,CAAC,CAAC,CAAC;eACrC;cAED,YAAY,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC;WACzC;UAED,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;cAChC,KAAK,IAAI,IAAE,GAAG,CAAC,EAAE,IAAE,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,IAAE,EAAE,EAAE;kBACpD,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAE,CAAC,CAAC,CAAC;eACnC;WACD;UAED,IAAI,QAAQ,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;cAC5B,KAAK,IAAI,IAAE,GAAG,CAAC,EAAE,IAAE,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,EAAE,IAAE,EAAE,EAAE;kBAChD,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAE,CAAC,CAAC,CAAC;eAC3B;WACD;OACD;MAED,OAAO;UACN,QAAQ,UAAA;UACR,OAAO,SAAA;UACP,GAAG,KAAA;UACH,OAAO,SAAA;OACP,CAAC;EACH,CAAC;;EC9ID;AACA,WAAgB,eAAe;MAC9B,IAAM,IAAI,GAAG,GAAG,CAAC;MACjB,IAAM,SAAS,GAAG;;UAEjB,CAAC,IAAI;UACL,CAAC,IAAI;UACL,IAAI;UACJ,IAAI;UACJ,CAAC,IAAI;UACL,IAAI;UACJ,IAAI;UACJ,IAAI;UACJ,IAAI;UACJ,CAAC,IAAI;UACL,IAAI;UACJ,IAAI;;UAGJ,CAAC,IAAI;UACL,CAAC,IAAI;UACL,CAAC,IAAI;UACL,CAAC,IAAI;UACL,IAAI;UACJ,CAAC,IAAI;UACL,IAAI;UACJ,IAAI;UACJ,CAAC,IAAI;UACL,IAAI;UACJ,CAAC,IAAI;UACL,CAAC,IAAI;;UAGL,CAAC,IAAI;UACL,IAAI;UACJ,CAAC,IAAI;UACL,CAAC,IAAI;UACL,IAAI;UACJ,IAAI;UACJ,IAAI;UACJ,IAAI;UACJ,IAAI;UACJ,IAAI;UACJ,IAAI;UACJ,CAAC,IAAI;;UAGL,CAAC,IAAI;UACL,CAAC,IAAI;UACL,CAAC,IAAI;UACL,IAAI;UACJ,CAAC,IAAI;UACL,CAAC,IAAI;UACL,IAAI;UACJ,CAAC,IAAI;UACL,IAAI;UACJ,CAAC,IAAI;UACL,CAAC,IAAI;UACL,IAAI;;UAGJ,IAAI;UACJ,CAAC,IAAI;UACL,CAAC,IAAI;UACL,IAAI;UACJ,IAAI;UACJ,CAAC,IAAI;UACL,IAAI;UACJ,IAAI;UACJ,IAAI;UACJ,IAAI;UACJ,CAAC,IAAI;UACL,IAAI;;UAGJ,CAAC,IAAI;UACL,CAAC,IAAI;UACL,CAAC,IAAI;UACL,CAAC,IAAI;UACL,CAAC,IAAI;UACL,IAAI;UACJ,CAAC,IAAI;UACL,IAAI;UACJ,IAAI;UACJ,CAAC,IAAI;UACL,IAAI;UACJ,CAAC,IAAI;OACL,CAAC;MAEF,IAAM,OAAO,GAAG;UACf,CAAC;UACD,CAAC;UACD,CAAC;UACD,CAAC;UACD,CAAC;UACD,CAAC;UACD,CAAC;UACD,CAAC;UACD,CAAC;UACD,CAAC;UACD,CAAC;UACD,CAAC;UACD,CAAC;UACD,CAAC;UACD,EAAE;UACF,CAAC;UACD,EAAE;UACF,EAAE;UACF,EAAE;UACF,EAAE;UACF,EAAE;UACF,EAAE;UACF,EAAE;UACF,EAAE;UACF,EAAE;UACF,EAAE;UACF,EAAE;UACF,EAAE;UACF,EAAE;UACF,EAAE;UACF,EAAE;UACF,EAAE;UACF,EAAE;UACF,EAAE;UACF,EAAE;UACF,EAAE;OACF,CAAC;MAEF,IAAM,GAAG,GAAG;;UAEX,GAAG;UACH,GAAG;UACH,GAAG;UACH,GAAG;UACH,GAAG;UACH,GAAG;UACH,GAAG;UACH,GAAG;;UAEH,GAAG;UACH,GAAG;UACH,GAAG;UACH,GAAG;UACH,GAAG;UACH,GAAG;UACH,GAAG;UACH,GAAG;;UAEH,GAAG;UACH,GAAG;UACH,GAAG;UACH,GAAG;UACH,GAAG;UACH,GAAG;UACH,GAAG;UACH,GAAG;;UAEH,GAAG;UACH,GAAG;UACH,GAAG;UACH,GAAG;UACH,GAAG;UACH,GAAG;UACH,GAAG;UACH,GAAG;;UAEH,GAAG;UACH,GAAG;UACH,GAAG;UACH,GAAG;UACH,GAAG;UACH,GAAG;UACH,GAAG;UACH,GAAG;;UAEH,GAAG;UACH,GAAG;UACH,GAAG;UACH,GAAG;UACH,GAAG;UACH,GAAG;UACH,GAAG;UACH,GAAG;OACH,CAAC;MAEF,IAAM,OAAO,GAAG;;UAEfnB,OAAO,EAAE,OAAO;UAChB,GAAG,EAAE,GAAG;UACR,OAAO,EAAE,OAAO;OAChB,CAAC;EACH,CAAC;AAED,WAAgB,iBAAiB;MAChC,IAAM,IAAI,GAAG,GAAG,CAAC;MAEjB,IAAM,SAAS,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;MAE3F,IAAM,OAAO,GAAG;UACf,CAAC;UACD,CAAC;UACD,CAAC;UACD,CAAC;UACD,CAAC;UACD,CAAC;OACD,CAAC;MAEF,IAAM,GAAG,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;MAErD,IAAM,OAAO,GAAG;;UAEf,GAAG;UACH,GAAG;UACH,GAAG;UACH,GAAG;UACH,GAAG;UACH,GAAG;UACH,GAAG;UACH,GAAG;UACH,GAAG;UACH,GAAG;UACH,GAAG;UACH,GAAG;OACH,CAAC;MAEF,OAAO;UACN,QAAQ,EAAE,SAAS;UACnB,OAAO,EAAE,OAAO;UAChB,GAAG,EAAE,GAAG;UACR,OAAO,EAAE,OAAO;OAChB,CAAC;EACH,CAAC;AAED,WAAgB,sBAAsB,CAAC,MAAkB,EAAE,MAAkB;MAAtC,uBAAA,EAAA,UAAkB;MAAE,uBAAA,EAAA,UAAkB;MAC5E,OAAO,IAAI,YAAY,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;EAC/F,CAAC;;MCjUY,oBAAoB,GAAG,oMAanC,CAAC;AAEF,MAAa,cAAc,GAAG,6GAQ7B,CAAC;AAEF,MAAa,aAAa,GAAG,gLAW5B;;WCnCe,KAAK,CAAC,KAAa,EAAE,GAAW,EAAE,GAAW;MAC5D,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;EAC5C,CAAC;AAED,WAAgB,KAAK,CAAC,GAAW,EAAE,GAAW;MAC7C,OAAO,CAAC,GAAG,GAAG,GAAG,IAAI,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC;EAC1C,CAAC;EAED;AACA,WAAgB,qBAAqB,CAAC,CAAU,EAAE,CAAU,EAAE,CAAU;MACvE,IAAM,OAAO,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAC1B,IAAM,OAAO,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAC1B,IAAM,OAAO,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAC1B,IAAM,OAAO,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAE1B,IAAI,MAAM,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;MAElC,IAAM,MAAM,GAAG,OAAO,GAAG,OAAO,CAAC;MACjC,IAAM,MAAM,GAAG,OAAO,GAAG,OAAO,CAAC;MAEjC,MAAM,CAAC,CAAC;UACP,CAAC,MAAM,GAAG,MAAM,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;eAC3E,CAAC,IAAI,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC;MACzB,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;MAE1E,OAAO,MAAM,CAAC;EACf,CAAC;AAED,WAAgB,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS;MAClD,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EAC5B,CAAC;AAED,WAAgB,QAAQ,CAAC,KAAa;;MAErC,OAAO,KAAK,GAAG,oBAAoB,CAAC;EACrC,CAAC;AAED,WAAgB,QAAQ,CAAC,KAAa;;MAErC,OAAO,iBAAiB,GAAG,KAAK,CAAC;EAClC,CAAC;;;MCtCD;UACS,WAAM,GAAY,KAAK,CAAC;UACxB,SAAI,GAASD,QAAW,EAAE,CAAC;UAC3B,QAAG,GAASA,QAAW,EAAE,CAAC;UAC1B,oBAAe,GAASE,MAAW,EAAE,CAAC;OAwI9C;MAtIA,uBAAS,GAAT,UAAU,GAAQ;UACX,IAAA,aAAG,EAAE,aAAG,CAAS;UAEvB,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UAChD,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UAEhD,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;UAC7C,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;UAE7C,IAAI,IAAI,GAAG,IAAI,EAAE;cACZ,IAAA,0BAA0C,EAAxC,kBAAM,EAAE,kBAAgC,CAAC;cAC/C,IAAI,GAAG,MAAM,CAAC;cACd,IAAI,GAAG,MAAM,CAAC;WACd;UACD,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE;cACjC,OAAO,KAAK,CAAC;WACb;UAED,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;UAC7C,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;UAE7C,IAAI,IAAI,GAAG,IAAI,EAAE;cACZ,IAAA,0BAA0C,EAAxC,kBAAM,EAAE,kBAAgC,CAAC;cAC/C,IAAI,GAAG,MAAM,CAAC;cACd,IAAI,GAAG,MAAM,CAAC;WACd;UAED,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE;cACjC,OAAO,KAAK,CAAC;WACb;UAED,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;UAEnB,OAAO,EAAE,IAAI,MAAA,EAAE,IAAI,MAAA,EAAE,CAAC;OACtB;MAED,qBAAO,GAAP,UAAQ,KAA2B,EAAE,cAAoB;UACxD,IAAM,QAAQ,GAAGF,QAAW,EAAE,CAAC;UAC/B,IAAM,SAAS,GAAGA,QAAW,EAAE,CAAC;UAEhCG,QAAa,CAAC,IAAI,CAAC,eAAe,EAAE,cAAc,CAAC,CAAC;UACpDC,aAAkB,CAAC,QAAQ,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;UAC7DC,SAAc,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;UACnCJ,aAAkB,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;UAEzD,OAAO,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;OACvD;MAED,4BAAc,GAAd,UAAe,KAA2B,EAAE,GAAS,EAAE,IAAU;UAChE,IAAI,aAAa,CAAC;UAClB,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE;cACzC,IAAI,GAAG,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;cACpB,IAAI,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;cACrE,IAAI,SAAS,EAAE;kBACd,IAAI,CAAC,aAAa,IAAI,aAAa,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC;sBAAE,aAAa,GAAG,SAAS,CAAC;eAC/E;WACD;UAED,OAAO,aAAa,CAAC;OACrB;;;MAKD,0BAAY,GAAZ,UAAa,GAAS,EAAE,GAAS,EAAE,GAAS,EAAE,GAAS,EAAE,IAAU;UAClE,IAAI,OAAO,GAAGD,QAAW,EAAE,CAAC;UAC5B,IAAI,OAAO,GAAGA,QAAW,EAAE,CAAC;UAC5B,IAAI,IAAI,GAAGA,QAAW,EAAE,CAAC;UAEzBM,QAAa,CAAC,OAAO,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;UACjCA,QAAa,CAAC,OAAO,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;UACjCC,KAAU,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;UACnC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;UAE7B,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO;cAAE,OAAO,KAAK,CAAC;UAEjE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;UAC1D,IAAI,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;UAErF,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;UAC/D,IAAI,YAAY,GAAG;cAClB,WAAW,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;cACvB,WAAW,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;cACvB,WAAW,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;WACvB,CAAC;UACF,IAAI,cAAc,GAAGP,QAAW,EAAE,CAAC;UACnCO,KAAU,CAAC,cAAc,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;UAC/C,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;UAC5C,IAAI,MAAM,GAAG,CAAC;cAAE,OAAO,KAAK,CAAC;UAE7B,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;UAC/D,IAAI,YAAY,GAAG;cAClB,WAAW,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;cACvB,WAAW,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;cACvB,WAAW,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;WACvB,CAAC;UACF,IAAI,cAAc,GAAGP,QAAW,EAAE,CAAC;UACnCO,KAAU,CAAC,cAAc,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;UAC/C,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;UAC5C,IAAI,MAAM,GAAG,CAAC;cAAE,OAAO,KAAK,CAAC;UAE7B,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;UAC/D,IAAI,YAAY,GAAG;cAClB,WAAW,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;cACvB,WAAW,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;cACvB,WAAW,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;WACvB,CAAC;UACF,IAAI,cAAc,GAAGP,QAAW,EAAE,CAAC;UACnCO,KAAU,CAAC,cAAc,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;UAC/C,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;UAC5C,IAAI,MAAM,GAAG,CAAC;cAAE,OAAO,KAAK,CAAC;UAE7B,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,WAAW,EAAE,CAAC;OACjC;MAED,2BAAa,GAAb,UAAc,OAAa,EAAE,KAAW;UACvC,IAAI,GAAG,GAAGP,QAAW,EAAE,CAAC;UACxBM,QAAa,CAAC,GAAG,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;UACnCD,SAAc,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UACzB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;UACf,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;OACpB;MAED,kBAAI,GAAJ,UAAK,IAAY,EAAE,IAAY;UAC9B,IAAI,OAAO,GAAG,IAAI,CAAC;UACnB,IAAI,GAAG,IAAI,CAAC;UACZ,IAAI,GAAG,OAAO,CAAC;UAEf,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;OACtC;MAED,iBAAG,GAAH,UAAI,CAAO,EAAE,CAAO;UACnB,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;OAC/C;MACF,UAAC;EAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCnIA,gBAAY,IAAuB;UAAvB,qBAAA,EAAA,eAAuB;UAP5B,aAAQ,GAAY,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;UACzC,mBAAc,GAAY,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;UAC/C,eAAU,GAASG,QAAW,EAAE,CAAC;UACjC,sBAAiB,GAASA,QAAW,EAAE,CAAC;UACxC,qBAAgB,GAASA,QAAW,EAAE,CAAC;UACvC,4BAAuB,GAASA,QAAW,EAAE,CAAC;UAGpD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;OACjB;MAEM,+BAAc,GAArB,UAAsB,EAAM,EAAE,EAAM,EAAE,EAAM;UAAtB,mBAAA,EAAA,MAAM;UAAE,mBAAA,EAAA,MAAM;UAAE,mBAAA,EAAA,MAAM;UAC3C,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC;UACrB,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC;UACrB,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC;OACrB;MAEM,qCAAoB,GAA3B,UAA4B,EAAM,EAAE,EAAM,EAAE,EAAS;UAAzB,mBAAA,EAAA,MAAM;UAAE,mBAAA,EAAA,MAAM;UAAE,mBAAA,EAAA,MAAM,GAAG;UACpD,IAAI,CAAC,cAAc,CAAC,CAAC,GAAG,EAAE,CAAC;UAC3B,IAAI,CAAC,cAAc,CAAC,CAAC,GAAG,EAAE,CAAC;UAC3B,IAAI,CAAC,cAAc,CAAC,CAAC,GAAG,EAAE,CAAC;OAC3B;MAEM,iCAAgB,GAAvB;UACCC,MAAW,CACV,IAAI,CAAC,UAAU,EACf,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EACnD,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,EACrE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACT,CAAC;UAEFC,MAAW,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;OACrD;MACF,aAAC;EAAD,CAAC,IAAA;EAED;AAEA;MAAuCC,qCAAM;MAO5C,2BACC,KAAa,EACb,MAAc,EACd,GAAgB,EAChB,IAAkB,EAClB,GAAkB;UAFlB,oBAAA,EAAA,QAAgB;UAChB,qBAAA,EAAA,UAAkB;UAClB,oBAAA,EAAA,UAAkB;UALnB,YAOC,kBAAM,aAAa,CAAC,SASpB;UAPA,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;UACnB,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;UACrB,KAAI,CAAC,GAAG,GAAG,GAAG,CAAC;UACf,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;UACjB,KAAI,CAAC,GAAG,GAAG,GAAG,CAAC;UAEf,KAAI,CAAC,iBAAiB,EAAE,CAAC;;OACzB;MAEM,6CAAiB,GAAxB;UACCC,WAAgB,CACf,IAAI,CAAC,gBAAgB,EACrB,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,IAAI,IAAI,CAAC,EAAE,EAC1B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,EACxB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,GAAG,CACR,CAAC;UAEFF,MAAW,CAAC,IAAI,CAAC,uBAAuB,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;OACjE;MAEM,sCAAU,GAAjB,UAAkB,KAAa,EAAE,MAAc;UAC9C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;UACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;UAErB,IAAI,CAAC,iBAAiB,EAAE,CAAC;OACzB;MAEM,uCAAW,GAAlB,UAAmB,IAAY,EAAE,GAAW;UAC3C,IAAI,IAAI;cAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;UAC3B,IAAI,GAAG;cAAE,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;UAExB,IAAI,CAAC,iBAAiB,EAAE,CAAC;OACzB;MAEM,qCAAS,GAAhB,UAAiB,KAAa;UAC7B,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;UAEjB,IAAI,CAAC,iBAAiB,EAAE,CAAC;OACzB;MACF,wBAAC;EAAD,CAxDA,CAAuC,MAAM,GAwD5C;EAED;AAEA;MAAiCC,+BAAM;MAQtC,qBACC,IAAY,EACZ,KAAa,EACb,MAAc,EACd,GAAW,EACX,IAAY,EACZ,GAAW;UANZ,YAQC,kBAAM,OAAO,CAAC,SAUd;UARA,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;UACjB,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;UACnB,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;UACrB,KAAI,CAAC,GAAG,GAAG,GAAG,CAAC;UACf,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;UACjB,KAAI,CAAC,GAAG,GAAG,GAAG,CAAC;UAEf,KAAI,CAAC,iBAAiB,EAAE,CAAC;;OACzB;MAEM,gCAAU,GAAjB,UAAkB,IAAY,EAAE,KAAa,EAAE,MAAc,EAAE,GAAW;UACzE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;UACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;UACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;UACrB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;UAEf,IAAI,CAAC,iBAAiB,EAAE,CAAC;OACzB;MAEM,iCAAW,GAAlB,UAAmB,IAAY,EAAE,GAAW;UAC3C,IAAI,IAAI;cAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;UAC3B,IAAI,GAAG;cAAE,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;UAExB,IAAI,CAAC,iBAAiB,EAAE,CAAC;OACzB;MAEM,uCAAiB,GAAxB;UACCE,KAAU,CACT,IAAI,CAAC,gBAAgB,EACrB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,GAAG,EACR,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,GAAG,CACR,CAAC;UAEFH,MAAW,CAAC,IAAI,CAAC,uBAAuB,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;OACjE;MACF,kBAAC;EAAD,CAzDA,CAAiC,MAAM;;EClGvC;MAGC;UAFQ,UAAK,GAAW,GAAG,CAAC;UAG3B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;OACpB;MAED,+BAAQ,GAAR,UAAS,KAAa;UACrB,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC;OACpB;;MAGD,6BAAM,GAAN;UACC,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;UAClD,IAAI,QAAQ,EAAE;cACb,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC;WAC3B;eAAM;cACN,IAAI,CAAC,IAAI,EAAE,CAAC;WACZ;UACD,OAAO,IAAI,CAAC,KAAK,CAAC;OAClB;;MAGD,2BAAI,GAAJ;UACC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;OACjB;MACF,mBAAC;EAAD,CAAC,IAAA;AAED;MAwDC,0BAAY,MAAc,EAAE,UAA0B;UAA1B,2BAAA,EAAA,aAAa,QAAQ,CAAC,IAAI;UArD9C,WAAM,GAASV,QAAW,EAAE,CAAC;UAC7B,gBAAW,GAAW,CAAC,CAAC;UACxB,gBAAW,GAAW,QAAQ,CAAC;UAC/B,cAAS,GAAY,IAAI,CAAC;UAmB1B,wBAAmB,GAAiB,IAAI,YAAY,EAAE,CAAC;UACvD,wBAAmB,GAAiB,IAAI,YAAY,EAAE,CAAC;UACvD,wBAAmB,GAAiB,IAAI,YAAY,EAAE,CAAC;UACvD,4BAAuB,GAAiB,IAAI,YAAY,EAAE,CAAC;UAC3D,0BAAqB,GAAiB,IAAI,YAAY,EAAE,CAAC;UACzD,6BAAwB,GAAiB,IAAI,YAAY,EAAE,CAAC;UAC5D,iBAAY,GAAG,KAAK,CAAC;UACrB,iBAAY,GAAG;cACtB,CAAC,EAAE,IAAI;cACP,CAAC,EAAE,IAAI;WACP,CAAC;UACM,eAAU,GAAG;cACpB,CAAC,EAAE,IAAI;cACP,CAAC,EAAE,IAAI;WACP,CAAC;UACM,iBAAY,GAAG;cACtB,CAAC,EAAE,IAAI;cACP,CAAC,EAAE,IAAI;WACP,CAAC;UAMM,qBAAgB,GAAW,CAAC,CAAC;UAC7B,kBAAa,GAAW,CAAC,CAAC;UAC1B,UAAK,GAAW,EAAE,CAAC;UACnB,WAAM,GAAW,CAAC,CAAC;UACnB,cAAS,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;UAC3B,cAAS,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;UAC3B,YAAO,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;UAEhC,IAAI,CAAC,MAAM,EAAE;cACZ,OAAO,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC;WACrC;UACD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;UACrB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;;;UAI7B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;UACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;;;UAI1B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;UACnB,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;;UAGrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;UACrB,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;;UAGvB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;UAClB,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;;UAGvB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;;UAGvB,IAAI,CAAC,IAAI,GAAG;cACX,IAAI,EAAE,IAAI;cACV,EAAE,EAAE,IAAI;cACR,KAAK,EAAE,IAAI;cACX,MAAM,EAAE,IAAI;cACZ,KAAK,EAAE,IAAI;WACX,CAAC;;UAGF,IAAI,CAAC,YAAY,GAAGA,QAAW,EAAE,CAAC;UAClC,IAAI,CAAC,cAAc,GAAGA,QAAW,EAAE,CAAC;UACpC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;UAC3C,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;UAC3C,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;UAE3C,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;UAChC,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;UAChC,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;UAChC,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;UACpD,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;UACvE,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;UACnE,IAAI,CAAC,UAAU,GAAG;cACjB,MAAM,EAAE,MAAM;cACd,KAAK,EAAE,KAAK;cACZ,GAAG,EAAE,GAAG;WACR,CAAC;UAEF,IAAI,CAAC,UAAU,EAAE,CAAC;UAClB,IAAI,CAAC,eAAe,EAAE,CAAC;UACvB,IAAI,CAAC,SAAS,EAAE,CAAC;OACjB;MACD,0CAAe,GAAf;UACC,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,aAAa,EAAE,IAAI,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;UACjF,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;UAC7E,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC;UAE1E,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC;UAC/E,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;UAE7E,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;UAClE,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;OAC9D;MACD,6CAAkB,GAAlB;UACC,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,aAAa,EAAE,IAAI,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;UACpF,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;UAChF,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC;UAC7E,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;UAChF,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;UAEnE,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,YAAY,EAAE,IAAI,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC;UAClF,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;UAEhF,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;UACrE,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;OACnE;MACD,oCAAS,GAAT;UACC,IAAI,CAAC,MAAM,GAAG,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;OAC/C;MACD,+BAAI,GAAJ;UACC,IAAI,CAAC,kBAAkB,EAAE,CAAC;UAC1B,IAAI,CAAC,YAAY,EAAE,CAAC;UACpB,IAAI,CAAC,MAAM,GAAG,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;OAC/C;MACD,6CAAkB,GAAlB;UACC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC;UACpD,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC;UACpD,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC;UAEpD,IAAI,CAAC,UAAU,CAAC,KAAK,IAAI,IAAI,CAAC,uBAAuB,CAAC,MAAM,EAAE,CAAC;UAC/D,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC;UAC3D,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,IAAI,CAAC,wBAAwB,CAAC,MAAM,EAAE,CAAC;OACjE;MACD,uCAAY,GAAZ;UACC,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;UACxB,IAAI,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;UAE9C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;UAC3E,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;UACrE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;;;UAI3E,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;UAC9C,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;UAC9C,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;UAE9C,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE,CAAC;OAC/B;MACD,qCAAU,GAAV;UACC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;UACjC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;UAC/D,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;UAC3D,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;UAC7D,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;UAC3D,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;UAEvD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;UAC7D,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;UAE3D,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;UAC3D,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;OACvD;MAED,8CAAmB,GAAnB,UAAoB,KAAiB;UACpC,IAAI,CAAC,IAAI,CAAC,SAAS;cAAE,OAAO;UAE5B,KAAK,CAAC,cAAc,EAAE,CAAC;OACvB;MACD,4CAAiB,GAAjB,UAAkB,KAAiB;UAClC,IAAI,CAAC,IAAI,CAAC,SAAS;cAAE,OAAO;UAE5B,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;cACvB,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;cACtB,IAAI,CAAC,YAAY,GAAG;kBACnB,CAAC,EAAE,KAAK,CAAC,OAAO;kBAChB,CAAC,EAAE,KAAK,CAAC,OAAO;eAChB,CAAC;WACF;eAAM;cACN,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;cACnB,IAAI,CAAC,SAAS,GAAG;kBAChB,CAAC,EAAE,KAAK,CAAC,OAAO;kBAChB,CAAC,EAAE,KAAK,CAAC,OAAO;eAChB,CAAC;WACF;UAED,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;UAC7E,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;OAChE;MACD,0CAAe,GAAf;UACC,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;UAChF,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;OACnE;MACD,4CAAiB,GAAjB,UAAkB,KAAiB;UAClC,IAAI,CAAC,IAAI,CAAC,SAAS;cAAE,OAAO;UAE5B,IAAI,IAAI,CAAC,KAAK,KAAK,QAAQ,EAAE;cAC5B,IAAI,CAAC,UAAU,GAAG;kBACjB,CAAC,EAAE,KAAK,CAAC,OAAO;kBAChB,CAAC,EAAE,KAAK,CAAC,OAAO;eAChB,CAAC;cACF,IAAI,CAAC,YAAY,GAAG;kBACnB,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;kBAC1C,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;eAC1C,CAAC;cAEF,IAAI,CAAC,oBAAoB,EAAE,CAAC;cAE5B,IAAI,CAAC,YAAY,GAAG;kBACnB,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;kBACpB,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;eACpB,CAAC;WACF;eAAM,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,EAAE;cAChC,IAAI,CAAC,OAAO,GAAG;kBACd,CAAC,EAAE,KAAK,CAAC,OAAO;kBAChB,CAAC,EAAE,KAAK,CAAC,OAAO;eAChB,CAAC;cACF,IAAI,CAAC,SAAS,GAAG;kBAChB,CAAC,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;kBAC7C,CAAC,EAAE,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;eAC5C,CAAC;cAEF,IAAI,CAAC,iBAAiB,EAAE,CAAC;cACzB,IAAI,CAAC,SAAS,GAAG;kBAChB,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;kBACjB,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;eACjB,CAAC;WACF;;OAED;MACD,6CAAkB,GAAlB,UAAmB,KAAiB;UACnC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;cACrB,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;WAC1C;eAAM;cACN,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;WAC3C;OACD;MAED,6CAAkB,GAAlB,UAAmB,KAAiB;UACnC,IAAI,EAAU,CAAC;UACf,IAAI,EAAU,CAAC;UAEf,QAAQ,KAAK,CAAC,OAAO,CAAC,MAAM;cAC3B,KAAK,CAAC;kBACL,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;kBACtB,IAAI,CAAC,YAAY,GAAG;sBACnB,CAAC,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO;sBAC3B,CAAC,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO;mBAC3B,CAAC;kBACF,MAAM;cACP,KAAK,CAAC;kBACL,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;kBACpB,EAAE,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;kBACzD,EAAE,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;kBACzD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;kBAClD,MAAM;cACP,KAAK,CAAC;kBACL,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;kBACnB,IAAI,CAAC,SAAS,GAAG;sBAChB,CAAC,EACA,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO;0BACxB,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO;0BACxB,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO;0BACzB,CAAC;sBACF,CAAC,EACA,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO;0BACxB,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO;0BACxB,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO;0BACzB,CAAC;mBACF,CAAC;kBAEF,MAAM;WACP;OACD;MAED,4CAAiB,GAAjB,UAAkB,KAAiB;UAClC,IAAI,EAAU,CAAC;UACf,IAAI,EAAU,CAAC;UACf,IAAI,IAAY,CAAC;UAEjB,QAAQ,KAAK,CAAC,OAAO,CAAC,MAAM;cAC3B,KAAK,CAAC;kBACL,IAAI,IAAI,CAAC,KAAK,KAAK,QAAQ;sBAAE,OAAO;kBACpC,IAAI,CAAC,UAAU,GAAG;sBACjB,CAAC,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO;sBAC3B,CAAC,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO;mBAC3B,CAAC;kBACF,IAAI,CAAC,YAAY,GAAG;sBACnB,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,GAAG;sBAClD,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,GAAG;mBAClD,CAAC;kBAEF,IAAI,CAAC,oBAAoB,EAAE,CAAC;kBAE5B,IAAI,CAAC,YAAY,GAAG;sBACnB,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;sBACpB,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;mBACpB,CAAC;kBACF,MAAM;cACP,KAAK,CAAC;kBACL,IAAI,IAAI,CAAC,KAAK,KAAK,MAAM;sBAAE,OAAO;kBAClC,EAAE,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;kBACzD,EAAE,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;kBACzD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;kBAErD,IAAI,GAAG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC;kBAClD,IAAI,IAAI,GAAG,CAAC;kBAEZ,IAAI,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC;kBACjD,YAAY,GAAG,KAAK,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;kBACvE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC;kBAC3C,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,YAAY,CAAC;kBACtC,MAAM;cACP,KAAK,CAAC;kBACL,IAAI,CAAC,OAAO,GAAG;sBACd,CAAC,EACA,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO;0BACxB,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO;0BACxB,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO;0BACzB,CAAC;sBACF,CAAC,EACA,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO;0BACxB,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO;0BACxB,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO;0BACzB,CAAC;mBACF,CAAC;kBACF,IAAI,CAAC,SAAS,GAAG;sBAChB,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;sBACpC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;mBACpC,CAAC;kBAEF,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;kBAEvB,IAAI,CAAC,iBAAiB,EAAE,CAAC;kBACzB,IAAI,CAAC,SAAS,GAAG;sBAChB,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;sBACjB,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;mBACjB,CAAC;kBACF,MAAM;WACP;;OAGD;MAED,4CAAiB,GAAjB,UAAkB,KAAoB;UACrC,IAAI,EAAE,GAAG,CAAC,CAAC;UACX,IAAI,EAAE,GAAG,CAAC,CAAC;UAEX,QAAQ,KAAK,CAAC,GAAG;cAChB,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK;kBACnB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;kBACzB,MAAM;cACP,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI;kBAClB,EAAE,GAAG,CAAC,EAAE,CAAC;kBACT,MAAM;cACP,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK;kBACnB,EAAE,GAAG,EAAE,CAAC;kBACR,MAAM;cACP,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE;kBAChB,EAAE,GAAG,EAAE,CAAC;kBACR,MAAM;cACP,KAAK,IAAI,CAAC,IAAI,CAAC,MAAM;kBACpB,EAAE,GAAG,CAAC,EAAE,CAAC;kBACT,MAAM;WACP;UAED,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;cACvB,IAAI,CAAC,SAAS,GAAG;kBAChB,CAAC,EAAE,EAAE;kBACL,CAAC,EAAE,EAAE;eACL,CAAC;cACF,IAAI,CAAC,iBAAiB,EAAE,CAAC;WACzB;eAAM;cACN,IAAI,CAAC,YAAY,GAAG;kBACnB,CAAC,EAAE,CAAC,EAAE;kBACN,CAAC,EAAE,EAAE;eACL,CAAC;cACF,IAAI,CAAC,oBAAoB,EAAE,CAAC;WAC5B;OACD;MACD,0CAAe,GAAf,UAAgB,KAAoB;UACnC,QAAQ,KAAK,CAAC,GAAG;cAChB,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK;kBACnB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;kBAC1B,MAAM;WACP;OACD;MACD,4CAAiB,GAAjB;UACC,IAAI,IAAI,GAAGA,QAAW,EAAE,CAAC;UACzB,IAAI,IAAI,GAAGA,QAAW,EAAE,CAAC;UACzB,IAAI,IAAI,GAAGA,QAAW,EAAE,CAAC;UACzB,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;UAClD,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;UAClD,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;UAClDK,SAAc,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;UAE3BE,KAAU,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;UAClCA,KAAU,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;UAE7B,IAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,EAAE,KAAK,CAAC,CAAC;UAE7D,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAChC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,KAAK,CACjE,CAAC;UACF,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAChC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,KAAK,CACjE,CAAC;UACF,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAChC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,KAAK,CACjE,CAAC;OACF;MACD,+CAAoB,GAApB;UACC,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;UAC1F,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;OACzF;MACF,uBAAC;EAAD,CAAC;;ECvdD;EACA;EAEA,IAAM,SAAS,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;EACpF,IAAM,QAAQ,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC5B,IAAM,WAAW,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;EAC3F,IAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;EAClC,IAAM,QAAQ,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;EACnC,IAAM,UAAU,GAAG,CAAC,CAAC;EACrB,IAAM,YAAY,GAAG,CAAC,CAAC;EACvB,IAAM,WAAW,GAAG,CAAC,CAAC;EAEtB,SAAS,MAAM,CAAC,GAAQ,EAAE,GAAQ;MACjC,OAAO,OAAO,GAAG,KAAK,QAAQ,GAAG,GAAG,GAAG,OAAO,GAAG,KAAK,QAAQ,GAAG,GAAG,GAAG,CAAC,CAAC;EAC1E,CAAC;AAED;MAiBC,oBAAY,IAAS,EAAE,IAAS,EAAE,OAAY;UAAZ,wBAAA,EAAA,YAAY;UAftC,YAAO,GAAQ,EAAE,CAAC;UAClB,WAAM,GAAQ,EAAE,CAAC;UAexB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;UACrB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;UACvB,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;UACtC,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;UAEzB,IAAI,CAAC,MAAM,EAAE,CAAC;OACd;MAED,2BAAM,GAAN;UACC,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC;UACvE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ;cAAE,OAAO,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAC;UAE9E,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;UACzB,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;UAC/B,IAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;UACvC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;;UAEhC,IAAM,KAAK,GAAG,IAAI,SAAS,CAC1B,IAAI,EACJ,IAAI,CAAC,OAAO,CAAC,QAAQ,EACrB,IAAI,CAAC,OAAO,CAAC,KAAK,EAClB,IAAI,CAAC,OAAO,CAAC,KAAK,EAClB,IAAI,CAAC,OAAO,CAAC,IAAI,EACjB,IAAI,CAAC,OAAO,CAAC,aAAa,CAC1B,CAAC,KAAK,CAAC;UACR,IAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,CAAC;UACvC,IAAI,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC,UAAS,IAAS,EAAE,IAAS;cAC5D,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;WAC5C,EAAE,CAAC,CAAC,CAAC;;UAGN,MAAM,GAAG,EAAE,CAAC;;UAGZ,IAAI,CAAC,GAAG,CAAC,CAAC;UACV,IAAI,CAAC,GAAG,CAAC,CAAC;UACV,IAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;UAC/E,IAAM,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC;UACtC,IAAM,SAAS,GAAG,UAAU,GAAG,QAAQ,CAAC;UACxC,IAAM,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,IAAI,CAAC,CAAC;UACtD,IAAM,MAAM,GAAG,UAAU,GAAG,KAAK,CAAC,MAAM,GAAG,SAAS,CAAC;UACrD,IAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;UAEpD,CAAC,IAAI,MAAM,CAAC;UAEZ,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC;UAC1B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;UACrB,IAAI,CAAC,SAAS,GAAG,UAAU,GAAG,QAAQ,CAAC;UACvC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;UACzB,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC;UACpC,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC,QAAQ,CAAC,CAAC;UACxC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;UAC7B,IAAI,CAAC,QAAQ,GAAG,UAAU,GAAG,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC;UAEtD,IAAI,IAAI,GAAG,IAAI,CAAC;UAChB,KAAK,CAAC,OAAO,CAAC,UAAS,IAAS,EAAE,SAAc;cAC/C,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;cACvB,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;cACnB,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;cAC3B,IAAI,SAAS,CAAC;;cAEd,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;kBACjC,IAAI,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;kBAC5B,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;kBAExC,IAAI,KAAK,EAAE;sBACV,IAAI,SAAS;0BAAE,CAAC,IAAI,UAAU,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC;sBAEjE,IAAI,EAAE,GAAG,CAAC,CAAC;sBACX,IAAI,KAAK,KAAK,YAAY;0BAAE,EAAE,IAAI,CAAC,YAAY,GAAG,SAAS,IAAI,CAAC,CAAC;2BAC5D,IAAI,KAAK,KAAK,WAAW;0BAAE,EAAE,IAAI,YAAY,GAAG,SAAS,CAAC;sBAE/D,MAAM,CAAC,IAAI,CAAC;0BACX,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;0BACjB,IAAI,EAAE,KAAK;0BACX,KAAK,EAAE,CAAC;0BACR,IAAI,EAAE,SAAS;uBACf,CAAC,CAAC;;sBAGH,CAAC,IAAI,KAAK,CAAC,QAAQ,GAAG,aAAa,CAAC;sBACpC,SAAS,GAAG,KAAK,CAAC;mBAClB;eACD;;cAGD,CAAC,IAAI,UAAU,CAAC;cAChB,CAAC,GAAG,CAAC,CAAC;WACN,CAAC,CAAC;UAEH,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC;UAC/B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;OACrB;MAED,6BAAQ,GAAR,UAAS,IAAS,EAAE,EAAO;UAC1B,IAAI,KAAK,GAAG,YAAY,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;UACnC,IAAI,KAAK;cAAE,OAAO,KAAK,CAAC;eACnB,IAAI,EAAE,KAAK,MAAM;cAAE,OAAO,IAAI,CAAC,iBAAiB,CAAC;eACjD,IAAI,EAAE,KAAK,QAAQ;cAAE,OAAO,IAAI,CAAC,mBAAmB,CAAC;UAC1D,OAAO,IAAI,CAAC;OACZ;MAED,iCAAY,GAAZ,UAAa,KAAa;UACzB,IAAI,KAAK,KAAK,QAAQ;cAAE,OAAO,YAAY,CAAC;eACvC,IAAI,KAAK,KAAK,OAAO;cAAE,OAAO,WAAW,CAAC;UAC/C,OAAO,UAAU,CAAC;OAClB;MAED,qCAAgB,GAAhB,UAAiB,QAAa;UAC7B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;UAC/B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;UAE7B,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC;cAAE,OAAO;;;;UAK3D,IAAM,KAAK,GACV,YAAY,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;UAEnF,IAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC;UACrD,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;UAChC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;cAChD,CAAC,EAAE,CAAC;cACJ,CAAC,EAAE,CAAC;cACJ,QAAQ,EAAE,QAAQ;cAClB,EAAE,EAAE,MAAM;cACV,OAAO,EAAE,CAAC;cACV,OAAO,EAAE,CAAC;cACV,KAAK,EAAE,CAAC;cACR,MAAM,EAAE,CAAC;WACT,CAAC,CAAC;OACH;MAED,iCAAY,GAAZ,UAAa,UAAoC,EAAE,IAA8B;UAChF,IAAI,GAAG,GAA6B,EAAE,CAAC;UACvC,KAAK,IAAI,GAAG,IAAI,UAAU,EAAE;cAC3B,GAAG,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;WAC3B;UAED,KAAK,IAAI,GAAG,IAAI,IAAI,EAAE;cACrB,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;WACrB;UAED,OAAO,GAAG,CAAC;OACX;MAED,6BAAQ,GAAR,UAAS,WAAqC,EAAE,KAAU;UACzD,KAAK,IAAI,GAAG,IAAI,WAAW,EAAE;cAC5B,IAAI,WAAW,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,KAAK,EAAE;kBAClC,OAAO,GAAG,CAAC;eACX;WACD;UAED,OAAO,CAAC,CAAC,CAAC;OACV;MAED,8BAAS,GAAT,UAAU,QAAa;UACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;cACzC,IAAI,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;cACnC,IAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;cAC5C,IAAI,GAAG,IAAI,CAAC;kBAAE,OAAO,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;WACzC;UACD,OAAO,CAAC,CAAC;OACT;MACF,iBAAC;EAAD,CAAC,IAAA;EAGD,IAAM,WAAW,GAAG,IAAI,CAAC;EACzB,IAAM,UAAU,GAAG,IAAI,CAAC;AAExB;MAGC,mBACC,IAAS,EACT,QAAa,EACb,KAAwB,EACxB,KAAS,EACT,IAAe,EACf,aAAiB;UAHjB,sBAAA,EAAA,QAAQ,MAAM,CAAC,SAAS;UACxB,sBAAA,EAAA,SAAS;UACT,qBAAA,EAAA,eAAe;;UAIf,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;UACtB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;UACzB,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;;OAE3C;MAED,0BAAM,GAAN,UAAO,IAAS,EAAE,KAAU,EAAE,GAAQ,EAAE,KAAa,EAAE,IAAS;;;UAI/D,IAAI,KAAK,GAAG,EAAE,CAAC;UAEf,IAAI,SAAS,GAAG,KAAK,CAAC;UAEtB,IAAI,IAAI,KAAK,QAAQ;cAAE,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;UAEpD,OAAO,KAAK,GAAG,GAAG,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE;;cAG1C,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;;cAGxD,OAAO,KAAK,GAAG,OAAO,EAAE;kBACvB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;sBAAE,MAAM;kBAClD,KAAK,EAAE,CAAC;eACR;;cAGD,IAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;cAE5E,IAAI,OAAO,GAAG,KAAK,IAAI,QAAQ,CAAC,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;cACtD,IAAI,SAAS,GAAG,OAAO,GAAG,WAAW,CAAC,MAAM,CAAC;;cAG7C,IAAI,OAAO,GAAG,OAAO,EAAE;;kBAEtB,OAAO,OAAO,GAAG,KAAK,EAAE;sBACvB,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;0BAAE,MAAM;sBACnD,OAAO,EAAE,CAAC;mBACV;kBACD,IAAI,OAAO,KAAK,KAAK,EAAE;sBACtB,IAAI,SAAS,GAAG,KAAK,GAAG,WAAW,CAAC,MAAM;0BAAE,SAAS,EAAE,CAAC;sBACxD,OAAO,GAAG,SAAS,CAAC;mBACpB;uBAAM;sBACN,SAAS,GAAG,OAAO,CAAC;;sBAEpB,OAAO,OAAO,GAAG,KAAK,EAAE;0BACvB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC;8BAAE,MAAM;0BACzE,OAAO,EAAE,CAAC;uBACV;mBACD;eACD;cAED,IAAI,OAAO,IAAI,KAAK,EAAE;kBACrB,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;kBAC1E,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;eACnB;cAED,KAAK,GAAG,SAAS,CAAC;WAClB;UAED,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;OACnB;MAED,yBAAK,GAAL,UAAM,IAAS,EAAE,GAAQ,EAAE,KAAa,EAAE,GAAW;UACpD,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;UAEnC,IAAI,GAAG,KAAK,CAAC,CAAC,IAAI,GAAG,GAAG,GAAG;cAAE,OAAO,GAAG,CAAC;UACxC,OAAO,GAAG,CAAC;OACX;MAED,gCAAY,GAAZ,UAAa,GAAW;UACvB,OAAO,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;OAC5B;MAED,2BAAO,GAAP,UAAQ,IAAS,EAAE,QAAa,EAAE,KAAU,EAAE,GAAQ,EAAE,KAAU;UACjE,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;OAC9D;MAED,kCAAc,GAAd,UAAe,IAAS,EAAE,IAAS,EAAE,KAAU,EAAE,GAAQ,EAAE,KAAU,EAAE,aAAiB;UAAjB,8BAAA,EAAA,iBAAiB;UACvF,IAAI,MAAM,GAAG,CAAC,CAAC;UACf,IAAI,QAAQ,GAAG,CAAC,CAAC;UACjB,IAAI,KAAK,GAAG,CAAC,CAAC;UACd,IAAI,KAAK,CAAC;UACV,IAAI,SAAS,CAAC;UAEd,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;cAChB,OAAO;kBACN,KAAK,EAAE,KAAK;kBACZ,GAAG,EAAE,KAAK;kBACV,KAAK,EAAE,CAAC;eACR,CAAC;WACF;UAED,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;UAEjC,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;cACjC,IAAI,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;cAC5B,KAAK,GAAG,YAAY,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;;cAG/B,IAAI,KAAK,EAAE;kBACV,IAAI,IAAI,GAAG,SAAS,GAAG,UAAU,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;kBACpE,MAAM,IAAI,IAAI,CAAC;kBAEf,IAAI,OAAO,GAAG,MAAM,GAAG,KAAK,CAAC,QAAQ,GAAG,aAAa,CAAC;kBACtD,IAAI,SAAS,GAAG,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC;;kBAErC,IAAI,SAAS,IAAI,KAAK,IAAI,OAAO,IAAI,KAAK;sBAAE,MAAM;;kBAGlD,MAAM,GAAG,OAAO,CAAC;kBACjB,QAAQ,GAAG,SAAS,CAAC;kBACrB,SAAS,GAAG,KAAK,CAAC;eAClB;cACD,KAAK,EAAE,CAAC;WACR;UAED,IAAI,SAAS;cAAE,QAAQ,IAAI,SAAS,CAAC,OAAO,CAAC;UAE7C,OAAO;cACN,KAAK,EAAE,KAAK;cACZ,GAAG,EAAE,KAAK,GAAG,KAAK;cAClB,KAAK,EAAE,QAAQ;WACf,CAAC;OACF;MACF,gBAAC;EAAD,CAAC,IAAA;EAED,SAAS,UAAU,CAAC,IAAS,EAAE,MAAW,EAAE,MAAW;MACtD,IAAI,CAAC,IAAI,CAAC,QAAQ;UAAE,OAAO;MAE3B,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;MAC7B,IAAI,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;MAC/B,IAAI,OAAO,EAAE;UACZ,IAAI,YAAY,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;UACnC,IAAI,YAAY;cAAE,OAAO,YAAY,CAAC;OACtC;MAED,OAAO,CAAC,CAAC;EACV,CAAC;EAED,SAAS,UAAU,CAAC,IAAS;MAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;UAC1C,IAAI,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;UACpC,IAAI,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;UACnC,IAAI,GAAG,IAAI,CAAC;cAAE,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;OAC5C;MACD,OAAO,CAAC,CAAC;EACV,CAAC;EAED,SAAS,QAAQ,CAAC,SAAc,EAAE,KAAU;MAC3C,KAAK,IAAI,GAAG,IAAI,SAAS,EAAE;UAC1B,IAAI,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,KAAK,EAAE;cAChC,OAAO,GAAG,CAAC;WACX;OACD;MACD,OAAO,CAAC,CAAC,CAAC;EACX,CAAC;EAED,SAAS,YAAY,CAAC,IAAS,EAAE,EAAO;MACvC,IAAI,CAAC,IAAI,CAAC,KAAK;UAAE,OAAO,IAAI,CAAC;MAE7B,IAAI,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;MAExC,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;EAC7B,CAAC;EAED,SAAS,YAAY,CAAC,IAAS;MAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;UAC5C,IAAI,EAAE,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;UACtC,IAAI,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;UACnC,IAAI,GAAG,IAAI,CAAC;cAAE,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;OAC5C;MACD,OAAO,CAAC,CAAC;EACV,CAAC;;;MCnYA,uBAAY,EAAyB,EAAE,UAAe,EAAE,WAAgB;UACvE,IAAM,QAAQ,GAAa,EAAE,CAAC;UAC9B,IAAM,GAAG,GAAa,EAAE,CAAC;UACzB,IAAM,OAAO,GAAa,EAAE,CAAC;UAE7B,IAAI,UAAU,GAAG,WAAW,CAAC,KAAK,CAAC;UACnC,IAAI,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC;UAErC,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,KAAU,EAAE,KAAU;cAChD,IAAI,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC;cACpB,IAAA,mBAAyB,EAAxB,UAAE,EAAE,UAAoB,CAAC;cAE9B,IAAI,MAAM,GAAG,EAAE,GAAG,MAAM,CAAC,OAAO,GAAG,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC;cACxD,IAAI,IAAI,GAAG,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC;cACjC,IAAI,MAAM,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,MAAM,CAAC,OAAO,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;cAChE,IAAI,IAAI,GAAG,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;cAElC,IAAI,QAAQ,GAAG,MAAM,CAAC,CAAC,GAAG,UAAU,CAAC;cACrC,IAAI,MAAM,GAAG,QAAQ,GAAG,MAAM,CAAC,KAAK,GAAG,UAAU,CAAC;cAClD,IAAI,QAAQ,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,WAAW,CAAC;cAC1C,IAAI,MAAM,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,IAAI,WAAW,CAAC;cAE1D,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;cACtE,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;cACjF,IAAI,SAAS,GAAG,CAAC,GAAG,KAAK,CAAC;cAC1B,OAAO,CAAC,IAAI,CACX,CAAC,GAAG,SAAS,EACb,CAAC,GAAG,SAAS,EACb,CAAC,GAAG,SAAS,EACb,CAAC,GAAG,SAAS,EACb,CAAC,GAAG,SAAS,EACb,CAAC,GAAG,SAAS,CACb,CAAC;WACF,CAAC,CAAC;UAEH,IAAI,CAAC,QAAQ,GAAG,IAAI,YAAY,CAAC,QAAQ,CAAC,CAAC;UAC3C,IAAI,CAAC,GAAG,GAAG,IAAI,YAAY,CAAC,GAAG,CAAC,CAAC;UACjC,IAAI,CAAC,OAAO,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC;OACxC;MACF,oBAAC;EAAD,CAAC;;;MCpCA;UAFO,aAAQ,GAAoC,EAAE,CAAC;OAE9B;MAEV,yBAAY,GAA1B;UACC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE;cAC3B,YAAY,CAAC,QAAQ,GAAG,IAAI,YAAY,EAAE,CAAC;;WAE3C;UAED,OAAO,YAAY,CAAC,QAAQ,CAAC;OAC7B;MAEa,wBAAW,GAAzB,UAA0B,IAAY;UACrC,OAAO,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;OAC5C;MAEM,4BAAK,GAAZ,UAAa,EAAyB;UACrC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;UACb,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;OACjD;MAEM,+BAAQ,GAAf,UAAgB,IAAY,EAAE,OAA6C;UAC1E,IAAM,OAAO,GAAG,kBAAkB,CAAC,IAAI,CAAC,EAAE,EAAE,OAAO,CAAiB,CAAC;UACrE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;OAC9B;MAEO,wCAAiB,GAAzB;UACC,IAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;UAChD,MAAM,CAAC,KAAK,GAAG,iBAAiB,CAAC;UACjC,MAAM,CAAC,MAAM,GAAG,iBAAiB,CAAC;UAClC,IAAM,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAA6B,CAAC;UAChE,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC;UAC1B,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;UACzD,GAAG,CAAC,SAAS,GAAG,kBAAkB,CAAC;UACnC,IAAI,GAAG,GAAG,CAAC,CAAC;UACZ,IAAM,aAAa,GAAG,iBAAiB,GAAG,YAAY,CAAC;UACvD,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,YAAY,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE;cAChD,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,YAAY,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE;kBAChD,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE;sBAClB,IAAM,IAAI,GAAG,EAAE,GAAG,aAAa,CAAC;sBAChC,IAAM,IAAI,GAAG,EAAE,GAAG,aAAa,CAAC;sBAChC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,EAAE,aAAa,EAAE,aAAa,CAAC,CAAC;mBACvD;kBACD,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;eACd;WACD;UAED,OAAO,MAAM,CAAC;OACd;MACF,mBAAC;EAAD,CAAC;;;MCdA,sBAAY,EAAyB;UAnB7B,aAAQ,GAEZ,EAAE,CAAC;UAEC,iBAAY,GAEhB,EAAE,CAAC;UAEC,aAAQ,GAKZ,EAAE,CAAC;UAEC,iBAAY,GAEhB,EAAE,CAAC;UAGN,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;OACb;MAEM,8BAAO,GAAd,UAAe,KAAa,EAAE,MAAc;UAC3C,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;OACtC;MAEM,oCAAa,GAApB,UAAqB,WAAmB,EAAE,YAAoB,EAAE,cAAsB;UACrF,IAAM,OAAO,GAAG,aAAa,CAAC,IAAI,CAAC,EAAE,EAAE,YAAY,EAAE,cAAc,CAAC,CAAC;UAErE,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;UAE5B,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG;cAC5B,EAAE,EAAE,OAAO;cACX,QAAQ,EAAE,EAAE;WACZ,CAAC;OACF;MAEM,kCAAW,GAAlB,UAAmB,IAAY,EAAE,KAAa,EAAE,MAAc,EAAE,IAAY;UAC3E,IAAM,OAAO,GAAG,kBAAkB,CACjC,IAAI,CAAC,EAAE,EACP,KAAK,EACL,MAAM,EACN,GAAG,EACH,MAAM,EACN,MAAM,EACN,aAAa,EACb,aAAa,EACb,IAAI,CACJ,CAAC;UAEF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;OAC9B;MAEM,2CAAoB,GAA3B,UAA4B,IAAY,EAAE,IAAY,EAAE,KAAuB;UAC9E,IAAM,OAAO,GAAG,4BAA4B,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;UAEtF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;OAC9B;MAEM,gDAAyB,GAAhC,UAAiC,WAAmB;UACnD,IAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;UAC3C,IAAM,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,iBAAiB,EAAE,CAAC;UAChD,IAAI,CAAC,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;UAC1D,IAAI,CAAC,EAAE,CAAC,oBAAoB,CAC3B,IAAI,CAAC,EAAE,CAAC,WAAW,EACnB,IAAI,CAAC,EAAE,CAAC,iBAAiB,EACzB,IAAI,CAAC,EAAE,CAAC,UAAU,EAClB,OAAO,EACP,CAAC,CACD,CAAC;UAEF,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,GAAG,WAAW,CAAC;OAC7C;MAEM,uCAAgB,GAAvB,UAAwB,KAAa,EAAE,MAAc;UACpD,IAAM,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,kBAAkB,EAAE,CAAC;UAC3C,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;UACtD,IAAI,CAAC,EAAE,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC,EAAE,CAAC,iBAAiB,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;OAC5F;MAEM,iCAAU,GAAjB,UAAkB,WAAmB;UACpC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC;OAClD;MAEM,0BAAG,GAAV,UAAW,WAAmB;UAC7B,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC;OAClD;MAEM,iCAAU,GAAjB,UAAkB,WAAmB;UACpC,OAAO,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC;OACrC;MAEM,wCAAiB,GAAxB,UAAyB,IAAY,EAAE,MAAkB,EAAE,MAAkB;UAAtC,uBAAA,EAAA,UAAkB;UAAE,uBAAA,EAAA,UAAkB;UAC5E,IAAM,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;UACtC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;UACjD,IAAI,CAAC,EAAE,CAAC,UAAU,CACjB,IAAI,CAAC,EAAE,CAAC,YAAY,EACpB,sBAAsB,CAAC,MAAM,EAAE,MAAM,CAAC,EACtC,IAAI,CAAC,EAAE,CAAC,WAAW,CACnB,CAAC;UAEF,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;OACjC;MAEM,qCAAc,GAArB;UACC,IAAM,QAAQ,GAAG,CAAC,CAAC;UACnB,IAAI,CAAC,EAAE,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;UAC1C,IAAI,CAAC,EAAE,CAAC,mBAAmB,CAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;OACrE;MAEM,gCAAS,GAAhB,UAAiB,IAAY;UAC5B,IAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;UACvC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;UACjD,IAAI,CAAC,cAAc,EAAE,CAAC;OACtB;MAEM,0BAAG,GAAV,UAAW,WAAmB,EAAE,YAAsB,EAAE,UAAkB;UACzE,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;UACtB,IAAI,CAAC,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC;UAC5E,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,YAAY,CAAC,MAAM,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE;cACvD,IAAM,SAAS,GAAG,YAAY,CAAC,EAAE,CAAC,CAAC;cACnC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAC;cAC7C,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;WAClE;UAED,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,cAAc,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;OACjD;MAEM,mCAAY,GAAnB,UAAoB,YAAoB,EAAE,YAAoB;UAC7D,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;UAC1C,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;UAC1D,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG,OAAO,CAAC;UAEtC,IAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;UAChD,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;UAClE,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,GAAG,OAAO,CAAC;OAC1C;MAEM,iCAAU,GAAjB,UACC,WAAmB,EACnB,IAAY,EACZ,GAAoC,EACpC,IAAY;UAEZ,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC;;UAEnD,IAAI,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;UAC9B,IAAI,CAAC,QAAQ,EAAE;cACd,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;cAC3E,QAAQ,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC;cAE1B,IAAI,CAAC,QAAQ,EAAE;kBACd,OAAO,CAAC,IAAI,CAAC,EAAE,WAAW,aAAA,EAAE,IAAI,MAAA,EAAE,CAAC,CAAC;eACpC;WACD;UAED,IAAI,IAAI,KAAK,UAAU;cAAE,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,QAAQ,EAAE,GAAa,CAAC,CAAC;eAC/D,IAAI,IAAI,KAAK,UAAU,EAAE;cAC7B,GAAG,GAAG,GAAe,CAAC;cACtB,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;WAC5C;eAAM,IAAI,IAAI,KAAK,UAAU,EAAE;cAC/B,GAAG,GAAG,GAAe,CAAC;cACtB,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;WACpD;eAAM,IAAI,IAAI,KAAK,UAAU,EAAE;cAC/B,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,QAAQ,EAAE,GAAa,CAAC,CAAC;WAC3C;eAAM,IAAI,IAAI,KAAK,cAAc,EAAE;cACnC,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,QAAQ,EAAE,KAAK,EAAE,GAAkB,CAAC,CAAC;WAC9D;eAAM;cACN,OAAO,CAAC,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,CAAC;WAC5C;OACD;MAEM,4BAAK,GAAZ;UACC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;UACnB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;UACvB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;UACnB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;OACvB;MACF,mBAAC;EAAD,CAAC;;;MC5LA,aACC,EAAyB,EACzB,KAAa,EACb,MAAc,EACd,OAA6B,EAC7B,WAA4B;UAA5B,4BAAA,EAAA,mBAA4B;UAE5B,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;UACb,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;UACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;UACrB,IAAI,CAAC,OAAO;cACX,OAAO,KAAK,SAAS,IAAI,OAAO,KAAK,IAAI;oBACtC,kBAAkB,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,EAAE,MAAM,CAAC;oBAC1C,OAAO,CAAC;UAEZ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,iBAAiB,EAAE,CAAC;UAC1C,IAAI,CAAC,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;UAC1D,IAAI,CAAC,OAAO,EAAE,CAAC;UAEf,IAAI,WAAW,EAAE;cAChB,IAAI,CAAC,WAAW,EAAE,CAAC;cACnB,IAAI,CAAC,WAAW,EAAE,CAAC;WACnB;OACD;MAEO,qBAAO,GAAf;UACC,IAAI,CAAC,EAAE,CAAC,oBAAoB,CAC3B,IAAI,CAAC,EAAE,CAAC,WAAW,EACnB,IAAI,CAAC,EAAE,CAAC,iBAAiB,EACzB,IAAI,CAAC,EAAE,CAAC,UAAU,EAClB,IAAI,CAAC,OAAO,EACZ,CAAC,CACD,CAAC;OACF;MAEO,yBAAW,GAAnB;UACC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,kBAAkB,EAAE,CAAC;OAC1C;MAEO,yBAAW,GAAnB;UACC,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC,KAA0B,CAAC,CAAC;UAChF,IAAI,CAAC,EAAE,CAAC,mBAAmB,CAC1B,IAAI,CAAC,EAAE,CAAC,YAAY,EACpB,IAAI,CAAC,EAAE,CAAC,iBAAiB,EACzB,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,MAAM,CACX,CAAC;UACF,IAAI,CAAC,EAAE,CAAC,uBAAuB,CAC9B,IAAI,CAAC,EAAE,CAAC,WAAW,EACnB,IAAI,CAAC,EAAE,CAAC,gBAAgB,EACxB,IAAI,CAAC,EAAE,CAAC,YAAY,EACpB,IAAI,CAAC,KAA0B,CAC/B,CAAC;OACF;MAEM,kBAAI,GAAX;UACC,IAAI,CAAC,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;OAC1D;MAEM,oBAAM,GAAb;UACC,IAAI,CAAC,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;OACnD;MAEM,oBAAM,GAAb,UAAc,KAAa,EAAE,MAAc,EAAE,OAAsB;UAClE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;UACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;UAErB,IAAI,CAAC,IAAI,EAAE,CAAC;UAEZ,uBAAuB,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAuB,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;UAC9E,IAAI,CAAC,OAAO,EAAE,CAAC;UACf,IAAI,CAAC,WAAW,EAAE,CAAC;OACnB;MAEM,wBAAU,GAAjB;UACC,OAAO,IAAI,CAAC,OAAO,CAAC;OACpB;MACF,UAAC;EAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}